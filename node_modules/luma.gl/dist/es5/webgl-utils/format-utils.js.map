{"version":3,"sources":["../../../src/webgl-utils/format-utils.js"],"names":["glFormatToComponents","format","glTypeToBytes","type"],"mappings":";;;;;;;;;;AAAA;;AAGA;AACO,SAASA,oBAAT,CAA8BC,MAA9B,EAAsC;AAC3C,UAAQA,MAAR;AACA;AACA;AACA;AACE,aAAO,CAAP;;AACF;AACA;AACE,aAAO,CAAP;;AACF;AACA;AACE,aAAO,CAAP;;AACF;AACA;AACE,aAAO,CAAP;AACF;;AACA;AAAS,2BAAO,KAAP;AAAe,aAAO,CAAP;AAfxB;AAiBD,C,CAED;;;AACO,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAClC,UAAQA,IAAR;AACA;AACE,aAAO,CAAP;;AACF;AACA;AACA;AACE,aAAO,CAAP;;AACF;AACE,aAAO,CAAP;AACF;;AACA;AAAS,2BAAO,KAAP;AAAe,aAAO,CAAP;AAVxB;AAYD","sourcesContent":["import assert from '../utils/assert';\nimport GL from 'luma.gl/constants';\n\n// Returns number of components in a specific readPixels WebGL format\nexport function glFormatToComponents(format) {\n  switch (format) {\n  case GL.ALPHA:\n  case GL.R32F:\n  case GL.RED:\n    return 1;\n  case GL.RG32F:\n  case GL.RG:\n    return 2;\n  case GL.RGB:\n  case GL.RGB32F:\n    return 3;\n  case GL.RGBA:\n  case GL.RGBA32F:\n    return 4;\n  // TODO: Add support for additional WebGL2 formats\n  default: assert(false); return 0;\n  }\n}\n\n// Return byte count for given readPixels WebGL type\nexport function glTypeToBytes(type) {\n  switch (type) {\n  case GL.UNSIGNED_BYTE:\n    return 1;\n  case GL.UNSIGNED_SHORT_5_6_5:\n  case GL.UNSIGNED_SHORT_4_4_4_4:\n  case GL.UNSIGNED_SHORT_5_5_5_1:\n    return 2;\n  case GL.FLOAT:\n    return 4;\n  // TODO: Add support for additional WebGL2 types\n  default: assert(false); return 0;\n  }\n}\n"],"file":"format-utils.js"}
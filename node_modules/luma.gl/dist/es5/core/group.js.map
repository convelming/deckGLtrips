{"version":3,"sources":["../../../src/core/group.js"],"names":["Group","opts","Array","isArray","children","every","child","Object3D","add","push","indexOf","splice","visitor","modelMatrix","Matrix4","matrix","multiplyRight","result","traverse","i","length","traverseReverse"],"mappings":"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","sourcesContent":["import Object3D from './object-3d';\nimport {Matrix4} from 'math.gl';\nimport assert from '../utils/assert';\n\nexport default class Group extends Object3D {\n  constructor(opts = {}) {\n    opts = Array.isArray(opts) ? {children: opts} : opts;\n    const {children = []} = opts;\n    children.every(child => assert(child instanceof Object3D));\n    super(opts);\n    this.children = children;\n  }\n\n  // Unpacks arrays and nested arrays of children\n  add(...children) {\n    for (const child of children) {\n      if (Array.isArray(child)) {\n        this.add(...child);\n      } else {\n        this.children.push(child);\n      }\n    }\n    return this;\n  }\n\n  remove(child) {\n    const children = this.children;\n    const indexOf = children.indexOf(child);\n    if (indexOf > -1) {\n      children.splice(indexOf, 1);\n    }\n    return this;\n  }\n\n  removeAll() {\n    this.children = [];\n    return this;\n  }\n\n  // If visitor returns a truthy value, traversal will be aborted and that value\n  // will be returned from `traverse`. Otherwise `traverse` will return null.\n  traverse(visitor, {modelMatrix = new Matrix4()} = {}) {\n    for (const child of this.children) {\n      const {matrix} = child;\n      modelMatrix = modelMatrix.multiplyRight(matrix);\n      let result;\n      if (child instanceof Group) {\n        result = child.traverse(visitor, {modelMatrix});\n      } else {\n        // child.setUniforms({modelMatrix});\n        result = visitor(child, {});\n      }\n      // Abort if a result was returned\n      if (result) {\n        return result;\n      }\n    }\n    return null;\n  }\n\n  // If visitor returns a truthy value, traversal will be aborted and that value\n  // will be returned from `traverseReverse`. Otherwise `traverseReverse` will return null.\n  traverseReverse(visitor, {modelMatrix = new Matrix4()} = {}) {\n    for (let i = this.children.length - 1; i >= 0; --i) {\n      const child = this.children[i];\n      const {matrix} = child;\n      modelMatrix = modelMatrix.multiplyRight(matrix);\n      let result;\n      if (child instanceof Group) {\n        result = child.traverseReverse(visitor, {modelMatrix});\n      } else {\n        // child.setUniforms({modelMatrix});\n        result = visitor(child, {});\n      }\n      // Abort if a result was returned\n      if (result) {\n        return result;\n      }\n    }\n    return null;\n  }\n}\n"],"file":"group.js"}
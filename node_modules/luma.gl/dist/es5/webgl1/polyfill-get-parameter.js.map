{"version":3,"sources":["../../../src/webgl1/polyfill-get-parameter.js"],"names":["OES_element_index","WEBGL_draw_buffers","EXT_disjoint_timer_query","EXT_disjoint_timer_query_webgl2","EXT_texture_filter_anisotropic","WEBGL_debug_renderer_info","GL_FRAGMENT_SHADER_DERIVATIVE_HINT","GL_DONT_CARE","GL_GPU_DISJOINT_EXT","GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT","GL_UNMASKED_VENDOR_WEBGL","GL_UNMASKED_RENDERER_WEBGL","getWebGL2ValueOrZero","gl","isWebGL2","undefined","WEBGL_PARAMETERS","getParameter","ext","getExtension","GPU_DISJOINT_EXT","UNMASKED_VENDOR_WEBGL","UNMASKED_RENDERER_WEBGL","luma","extensions","MAX_TEXTURE_MAX_ANISOTROPY_EXT","MAX_COLOR_ATTACHMENTS_WEBGL","MAX_DRAW_BUFFERS_WEBGL","GL_TEXTURE_BINDING_3D","getParameterPolyfill","originalGetParameter","pname","limit","value","result"],"mappings":"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","sourcesContent":["/* eslint-disable no-inline-comments, max-len, camelcase */\nimport GL from '../constants';\n\nconst OES_element_index = 'OES_element_index';\nconst WEBGL_draw_buffers = 'WEBGL_draw_buffers';\nconst EXT_disjoint_timer_query = 'EXT_disjoint_timer_query';\nconst EXT_disjoint_timer_query_webgl2 = 'EXT_disjoint_timer_query_webgl2';\nconst EXT_texture_filter_anisotropic = 'EXT_texture_filter_anisotropic';\nconst WEBGL_debug_renderer_info = 'WEBGL_debug_renderer_info';\n\nconst GL_FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8B8B;\nconst GL_DONT_CARE = 0x1100;\nconst GL_GPU_DISJOINT_EXT = 0x8FBB;\nconst GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FF;\nconst GL_UNMASKED_VENDOR_WEBGL = 0x9245; // vendor string of the graphics driver.\nconst GL_UNMASKED_RENDERER_WEBGL = 0x9246; // renderer string of the graphics driver.\n\nconst getWebGL2ValueOrZero = gl => !isWebGL2(gl) ? 0 : undefined;\n\n// if a function returns undefined in this table,\n// the original getParameter will be called, defeating the override\nconst WEBGL_PARAMETERS = {\n  [GL.READ_BUFFER]: gl => !isWebGL2(gl) ? GL.COLOR_ATTACHMENT0 : undefined,\n\n  // WebGL2 context parameters\n  [GL_FRAGMENT_SHADER_DERIVATIVE_HINT]:\n    gl => !isWebGL2(gl) ? GL_DONT_CARE : undefined,\n\n  [GL.RASTERIZER_DISCARD]: getWebGL2ValueOrZero,\n\n  [GL.SAMPLES]: getWebGL2ValueOrZero,\n\n  // WebGL2 extension context parameters\n  [GL_GPU_DISJOINT_EXT]:\n    (gl, getParameter) => {\n      const ext = isWebGL2(gl) ?\n        gl.getExtension(EXT_disjoint_timer_query_webgl2) :\n        gl.getExtension(EXT_disjoint_timer_query);\n      return ext && ext.GPU_DISJOINT_EXT ? getParameter(ext.GPU_DISJOINT_EXT) : 0;\n    },\n\n  // Extension fixed values\n  [GL_UNMASKED_VENDOR_WEBGL]:\n    (gl, getParameter) => {\n      const ext = gl.getExtension(WEBGL_debug_renderer_info);\n      return getParameter((ext && ext.UNMASKED_VENDOR_WEBGL) || GL.VENDOR);\n    },\n\n  [GL_UNMASKED_RENDERER_WEBGL]:\n    (gl, getParameter) => {\n      const ext = gl.getExtension(WEBGL_debug_renderer_info);\n      return getParameter((ext && ext.UNMASKED_RENDERER_WEBGL) || GL.RENDERER);\n    },\n\n  // Extension LIMITS\n  [GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT]:\n    (gl, getParameter) => {\n      const ext = gl.luma.extensions[EXT_texture_filter_anisotropic];\n      return ext ? getParameter(ext.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 1.0;\n    },\n\n  // WebGL2 Limits\n  [GL.MAX_3D_TEXTURE_SIZE]: getWebGL2ValueOrZero,\n  [GL.MAX_ARRAY_TEXTURE_LAYERS]: getWebGL2ValueOrZero,\n  [GL.MAX_CLIENT_WAIT_TIMEOUT_WEBGL]: getWebGL2ValueOrZero,\n  [GL.MAX_COLOR_ATTACHMENTS]:\n    (gl, getParameter) => {\n      if (!isWebGL2(gl)) {\n        const ext = gl.getExtension(WEBGL_draw_buffers);\n        return ext ? getParameter(ext.MAX_COLOR_ATTACHMENTS_WEBGL) : 0;\n      }\n      return undefined;\n    },\n  [GL.MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MAX_COMBINED_UNIFORM_BLOCKS]: getWebGL2ValueOrZero,\n  [GL.MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MAX_DRAW_BUFFERS]:\n    gl => {\n      if (!isWebGL2(gl)) {\n        const ext = gl.getExtension(WEBGL_draw_buffers);\n        return ext ? ext.MAX_DRAW_BUFFERS_WEBGL : 0;\n      }\n      return undefined;\n    },\n  [GL.MAX_ELEMENT_INDEX]:\n    // Guess: per webglstats.com 99.6% of webgl2 supports 2147483647\n    gl => gl.getExtension(OES_element_index) ? 2147483647 : 65535,\n  [GL.MAX_ELEMENTS_INDICES]:\n    // Guess: \"Reasonably safe\" per webglstats.com - could be higher/lower (on some mobile devices)\n    gl => gl.getExtension(OES_element_index) ? 16777216 : 65535,\n  [GL.MAX_ELEMENTS_VERTICES]:\n    // Guess: \"Reasonably safe\" per webglstats.com - could be higher/lower (on some mobile devices)\n    gl => 16777216,\n  [GL.MAX_FRAGMENT_INPUT_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MAX_FRAGMENT_UNIFORM_BLOCKS]: getWebGL2ValueOrZero,\n  [GL.MAX_FRAGMENT_UNIFORM_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MAX_SAMPLES]: getWebGL2ValueOrZero,\n  [GL.MAX_SERVER_WAIT_TIMEOUT]: getWebGL2ValueOrZero,\n  [GL.MAX_TEXTURE_LOD_BIAS]: getWebGL2ValueOrZero,\n  [GL.MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS]: getWebGL2ValueOrZero,\n  [GL.MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MAX_UNIFORM_BLOCK_SIZE]: getWebGL2ValueOrZero,\n  [GL.MAX_UNIFORM_BUFFER_BINDINGS]: getWebGL2ValueOrZero,\n  [GL.MAX_VARYING_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MAX_VERTEX_OUTPUT_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MAX_VERTEX_UNIFORM_BLOCKS]: getWebGL2ValueOrZero,\n  [GL.MAX_VERTEX_UNIFORM_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MIN_PROGRAM_TEXEL_OFFSET]: getWebGL2ValueOrZero,\n  [GL.MAX_PROGRAM_TEXEL_OFFSET]: getWebGL2ValueOrZero,\n  [GL.UNIFORM_BUFFER_OFFSET_ALIGNMENT]: getWebGL2ValueOrZero\n};\n\n// Return true if WebGL2 context\nfunction isWebGL2(gl) {\n  const GL_TEXTURE_BINDING_3D = 0x806A;\n  return gl && gl.TEXTURE_BINDING_3D === GL_TEXTURE_BINDING_3D;\n}\n\n// A \"replacement\" gl.getParameter that accepts \"enums\" from extensions and WebGL2\n// and returns reasonably safe defaults\nexport function getParameterPolyfill(gl, originalGetParameter, pname) {\n\n  // Return mock limits (usually 0) for WebGL2 constants to ensure these\n  // can be queries without error\n  const limit = WEBGL_PARAMETERS[pname];\n  const value = typeof limit === 'function' ? limit(gl, originalGetParameter, pname) : limit;\n  const result = value !== undefined ? value : originalGetParameter(pname);\n  return result;\n}\n"],"file":"polyfill-get-parameter.js"}
//
// A mask pass.
//
// Attribution: This class and the multipass system were inspired by
// the THREE.js EffectComposer and *Pass classes
import Pass from './pass';
export default class MaskPass extends Pass {
  constructor(gl, props) {
    super(gl, Object.assign({
      id: 'mask-pass'
    }, props));
    this.inverse = false;
    this.clearStencil = true;
  }

  _renderPass({
    gl
  }) {
    let writeValue = 1;
    let clearValue = 0;

    if (this.inverse) {
      writeValue = 0;
      clearValue = 1;
    } // don't update color or depth


    gl.colorMask(false, false, false, false);
    gl.depthMask(false); // set up stencil

    gl.enable(2960);
    gl.stencilOp(7681, 7681, 7681);
    gl.stencilFunc(519, writeValue, 0xffffffff);
    gl.clearStencil(clearValue); // TODO - draw into the stencil buffers of the two framebuffers
    // renderer.render(this.scene, this.camera, this.readBuffer, this.clear);
    // renderer.render(this.scene, this.camera, this.writeBuffer, this.clear);
    // re-enable update of color and depth

    gl.colorMask(true, true, true, true);
    gl.depthMask(true); // only render where stencil is set to 1

    gl.stencilFunc(514, 1, 0xffffffff); // draw if == 1

    gl.stencilOp(7680, 7680, 7680);
  }

}
//# sourceMappingURL=mask-pass.js.map
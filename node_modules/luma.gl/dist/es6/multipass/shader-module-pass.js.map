{"version":3,"sources":["../../../src/multipass/shader-module-pass.js"],"names":["Pass","CompositePass","ClipSpace","normalizeShaderModule","ShaderModuleSinglePass","constructor","gl","props","Object","assign","swap","_renderPass","inputBuffer","swapBuffers","model","setUniforms","draw","uniforms","texture","texSize","width","height","parameters","depthWrite","depthTest","ShaderModulePass","module","id","name","passes","normalizePasses","first","pass","filter","sampler","fs","getFragmentShaderForRenderPass","getModel","map","idn","length","modules","getUniforms","FILTER_FS_TEMPLATE","func","SAMPLER_FS_TEMPLATE"],"mappings":"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","sourcesContent":["//\n// A pass that renders a given texture into screen space\n//\n\nimport Pass from './pass';\nimport CompositePass from './composite-pass';\nimport ClipSpace from '../models/clip-space';\n\nimport {normalizeShaderModule} from '../shadertools/src/lib/filters/normalize-module';\n\nclass ShaderModuleSinglePass extends Pass {\n  constructor(gl, props = {}) {\n    super(gl, Object.assign({swap: true}, props));\n  }\n\n  _renderPass({inputBuffer, swapBuffers}) {\n    this.props.model.setUniforms(this.props);\n\n    // swapBuffers();\n    this.props.model.draw({\n      uniforms: {\n        texture: inputBuffer,\n        texSize: [inputBuffer.width, inputBuffer.height]\n      },\n      parameters: {\n        depthWrite: false,\n        depthTest: false\n      }\n    });\n  }\n}\n\nexport default class ShaderModulePass extends CompositePass {\n  constructor(gl, module, props = {}) {\n    const id = `${module.name}-pass`;\n    normalizeShaderModule(module);\n    const passes = normalizePasses(gl, module, id, props);\n    super(gl, Object.assign({id, passes}, props));\n    this.module = module;\n  }\n\n  _renderPass({inputBuffer, swapBuffers}) {\n    let first = true;\n    for (const pass of this.module.passes) {\n      if (!first) {\n        swapBuffers();\n      }\n      first = false;\n      if (pass.uniforms) {\n        pass.model.setUniforms(pass.uniforms);\n      }\n      // swapBuffers();\n      pass.model.draw({\n        uniforms: {\n          texture: inputBuffer,\n          texSize: [inputBuffer.width, inputBuffer.height]\n        },\n        parameters: {\n          depthWrite: false,\n          depthTest: false\n        }\n      });\n    }\n  }\n}\n\nfunction normalizePasses(gl, module, id, props) {\n  if (module.filter || module.sampler) {\n    const fs = getFragmentShaderForRenderPass(module);\n    const pass = new ShaderModuleSinglePass(gl, {\n      id,\n      model: getModel(gl, module, fs, id, props),\n      uniforms: null\n    });\n    return [pass];\n  }\n\n  const passes = module.passes || [];\n  return passes.map(pass => {\n    const fs = getFragmentShaderForRenderPass(module, pass);\n    const idn = `${id}-${passes.length + 1}`;\n\n    return new ShaderModuleSinglePass(gl, Object.assign({\n      id: idn,\n      model: getModel(gl, module, fs, idn, props),\n      uniforms: pass.uniforms\n    }, props));\n  });\n}\n\nfunction getModel(gl, module, fs, id, props) {\n  const model = new ClipSpace(gl, {id, fs, modules: [module]});\n\n  const uniforms = Object.assign(\n    module.getUniforms(),\n    module.getUniforms(props)\n  );\n\n  model.setUniforms(uniforms);\n  return model;\n}\n\nconst FILTER_FS_TEMPLATE = func => `\\\nuniform sampler2D texture;\nuniform vec2 texSize;\n\nvarying vec2 position;\nvarying vec2 coordinate;\nvarying vec2 uv;\n\nvoid main() {\n  vec2 texCoord = coordinate;\n\n  gl_FragColor = texture2D(texture, texCoord);\n  gl_FragColor = ${func}(gl_FragColor, texSize, texCoord);\n}\n`;\n\nconst SAMPLER_FS_TEMPLATE = func => `\\\nuniform sampler2D texture;\nuniform vec2 texSize;\n\nvarying vec2 position;\nvarying vec2 coordinate;\nvarying vec2 uv;\n\nvoid main() {\n  vec2 texCoord = coordinate;\n\n  gl_FragColor = ${func}(texture, texSize, texCoord);\n}\n`;\n\nfunction getFragmentShaderForRenderPass(module, pass = module) {\n\n  if (pass.filter) {\n    const func = typeof pass.filter === 'string' ? pass.filter : `${module.name}_filterColor`;\n    return FILTER_FS_TEMPLATE(func);\n  }\n\n  if (pass.sampler) {\n    const func = typeof pass.sampler === 'string' ? pass.sampler : `${module.name}_sampleColor`;\n    return SAMPLER_FS_TEMPLATE(func);\n  }\n\n  // console.error(`${module.name} no fragment shader generated`);\n  return null;\n}\n"],"file":"shader-module-pass.js"}
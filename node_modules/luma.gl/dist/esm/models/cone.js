import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import { ConeGeometry } from '../geometry';
import { Model } from '../core';

var Cone =
/*#__PURE__*/
function (_Model) {
  _inherits(Cone, _Model);

  function Cone(gl) {
    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, Cone);

    return _possibleConstructorReturn(this, _getPrototypeOf(Cone).call(this, gl, Object.assign({}, opts, {
      geometry: new ConeGeometry(opts)
    })));
  }

  return Cone;
}(Model);

export { Cone as default };
//# sourceMappingURL=cone.js.map
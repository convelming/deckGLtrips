import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import { CubeGeometry } from '../geometry';
import { Model } from '../core';
import { uid } from '../utils';

var Cube =
/*#__PURE__*/
function (_Model) {
  _inherits(Cube, _Model);

  function Cube(gl) {
    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, Cube);

    var _opts$id = opts.id,
        id = _opts$id === void 0 ? uid('cube') : _opts$id;
    return _possibleConstructorReturn(this, _getPrototypeOf(Cube).call(this, gl, Object.assign({}, opts, {
      id: id,
      geometry: new CubeGeometry(opts)
    })));
  }

  return Cube;
}(Model);

export { Cube as default };
//# sourceMappingURL=cube.js.map
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import { Model } from '../core';
import { IcoSphereGeometry } from '../geometry';

var IcoSphere =
/*#__PURE__*/
function (_Model) {
  _inherits(IcoSphere, _Model);

  function IcoSphere(gl) {
    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, IcoSphere);

    return _possibleConstructorReturn(this, _getPrototypeOf(IcoSphere).call(this, gl, Object.assign({}, opts, {
      geometry: new IcoSphereGeometry(opts)
    })));
  }

  return IcoSphere;
}(Model);

export { IcoSphere as default };
//# sourceMappingURL=ico-sphere.js.map
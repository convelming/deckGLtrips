import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import { PlaneGeometry } from '../geometry';
import Model from '../core/model';
import { uid } from '../utils';

var Plane =
/*#__PURE__*/
function (_Model) {
  _inherits(Plane, _Model);

  function Plane(gl) {
    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, Plane);

    var _opts$id = opts.id,
        id = _opts$id === void 0 ? uid('plane') : _opts$id;
    return _possibleConstructorReturn(this, _getPrototypeOf(Plane).call(this, gl, Object.assign({}, opts, {
      id: id,
      geometry: new PlaneGeometry(opts)
    })));
  }

  return Plane;
}(Model);

export { Plane as default };
//# sourceMappingURL=plane.js.map
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _possibleConstructorReturn from "@babel/runtime/helpers/esm/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/esm/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import { CylinderGeometry } from '../geometry';
import Model from '../core/model';

var Cylinder =
/*#__PURE__*/
function (_Model) {
  _inherits(Cylinder, _Model);

  function Cylinder(gl) {
    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, Cylinder);

    return _possibleConstructorReturn(this, _getPrototypeOf(Cylinder).call(this, gl, Object.assign({}, opts, {
      geometry: new CylinderGeometry(opts)
    })));
  }

  return Cylinder;
}(Model);

export { Cylinder as default };
//# sourceMappingURL=cylinder.js.map
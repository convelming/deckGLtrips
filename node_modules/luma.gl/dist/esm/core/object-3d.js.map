{"version":3,"sources":["../../../src/core/object-3d.js"],"names":["uid","Vector3","Matrix4","assert","Object3D","id","display","constructor","name","position","rotation","scale","matrix","userData","children","length","update","setPosition","setRotation","setScale","updateMatrix","pos","rot","identity","translate","rotateXYZ","viewMatrix","modelMatrix","worldMatrix","multiplyRight","worldInverse","invert","worldInverseTranspose","transpose","objectMatrix","worldInverseMatrix","worldInverseTransposeMatrix","parent","endPosition","set","endRotation","endScale","add","ch","i","transform"],"mappings":"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","sourcesContent":["import {uid} from '../utils';\nimport {Vector3, Matrix4} from 'math.gl';\nimport assert from '../utils/assert';\n\nexport default class Object3D {\n\n  constructor({id, display = true}) {\n    // whether to display the object at all\n    this.id = id || uid(this.constructor.name);\n    this.display = true;\n\n    // model position, rotation, scale and all in all matrix\n    this.position = new Vector3();\n    this.rotation = new Vector3();\n    this.scale = new Vector3(1, 1, 1);\n    this.matrix = new Matrix4();\n\n    this.userData = {};\n  }\n\n  toString() {\n    return `{id: ${this.id}, children: ${this.children})}`;\n  }\n\n  setPosition(position) {\n    assert(position.length === 3, 'setPosition requires vector argument');\n    this.position = position;\n    return this;\n  }\n\n  setRotation(rotation) {\n    assert(rotation.length === 3, 'setRotation requires vector argument');\n    this.rotation = rotation;\n    return this;\n  }\n\n  setScale(scale) {\n    assert(scale.length === 3, 'setScale requires vector argument');\n    this.scale = scale;\n    return this;\n  }\n\n  setMatrixComponents({position, rotation, scale, update = true}) {\n    if (position) {\n      this.setPosition(position);\n    }\n    if (rotation) {\n      this.setRotation(rotation);\n    }\n    if (scale) {\n      this.setScale(scale);\n    }\n    if (update) {\n      this.updateMatrix();\n    }\n    return this;\n  }\n\n  updateMatrix() {\n    const pos = this.position;\n    const rot = this.rotation;\n    const scale = this.scale;\n\n    this.matrix.identity();\n    this.matrix.translate(pos);\n    this.matrix.rotateXYZ(rot);\n    this.matrix.scale(scale);\n    return this;\n  }\n\n  update({position, rotation, scale} = {}) {\n    if (position) {\n      this.setPosition(position);\n    }\n    if (rotation) {\n      this.setRotation(rotation);\n    }\n    if (scale) {\n      this.setScale(scale);\n    }\n    this.updateMatrix();\n    return this;\n  }\n\n  getCoordinateUniforms(viewMatrix, modelMatrix) {\n    // TODO - solve multiple class problem\n    // assert(viewMatrix instanceof Matrix4);\n    assert(viewMatrix);\n    modelMatrix = modelMatrix || this.matrix;\n    const worldMatrix = new Matrix4(viewMatrix).multiplyRight(modelMatrix);\n    const worldInverse = worldMatrix.invert();\n    const worldInverseTranspose = worldInverse.transpose();\n\n    return {\n      viewMatrix,\n      modelMatrix,\n      objectMatrix: modelMatrix,\n      worldMatrix,\n      worldInverseMatrix: worldInverse,\n      worldInverseTransposeMatrix: worldInverseTranspose\n    };\n  }\n\n  // TODO - copied code, not yet vetted\n  transform() {\n\n    if (!this.parent) {\n      this.endPosition.set(this.position);\n      this.endRotation.set(this.rotation);\n      this.endScale.set(this.scale);\n    } else {\n      const parent = this.parent;\n      this.endPosition.set(this.position.add(parent.endPosition));\n      this.endRotation.set(this.rotation.add(parent.endRotation));\n      this.endScale.set(this.scale.add(parent.endScale));\n    }\n\n    const ch = this.children;\n    for (let i = 0; i < ch.length; ++i) {\n      ch[i].transform();\n    }\n\n    return this;\n  }\n}\n"],"file":"object-3d.js"}
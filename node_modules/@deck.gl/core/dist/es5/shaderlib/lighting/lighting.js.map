{"version":3,"sources":["../../../../src/shaderlib/lighting/lighting.js"],"names":["name","dependencies","project","vs","lightingShader","getUniforms","deprecations","type","old","new","deprecated","INITIAL_MODULE_OPTIONS","DEFAULT_LIGHTS_POSITION","DEFAULT_LIGHTS_STRENGTH","DEFAULT_AMBIENT_RATIO","DEFAULT_DIFFUSE_RATIO","DEFAULT_SPECULAR_RATIO","getMemoizedLightPositions","preprojectLightPositions","opts","lightSettings","coordinateSystem","coordinateOrigin","numberOfLights","lightsPosition","lightsStrength","fromCoordinateSystem","fromCoordinateOrigin","modelMatrix","ambientRatio","diffuseRatio","specularRatio","lightsPositionWorld","viewport","lighting_lightPositions","lighting_lightStrengths","lighting_ambientRatio","lighting_diffuseRatio","lighting_specularRatio","lighting_numberOfLights","projectionParameters","i","position","slice"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport lightingShader from './lighting.glsl';\nimport project from '../project/project';\nimport {projectPosition} from '../project/project-functions';\nimport memoize from '../../utils/memoize';\n\nexport default {\n  name: 'lighting',\n  dependencies: [project],\n  vs: lightingShader,\n  getUniforms,\n  deprecations: [\n    // Deprecated lighting functions\n    {type: 'function', old: 'getLightWeight', new: 'lighting_getLightWeight', deprecated: true}\n  ]\n};\n\nconst INITIAL_MODULE_OPTIONS = {};\n\nconst DEFAULT_LIGHTS_POSITION = [-122.45, 37.75, 8000];\nconst DEFAULT_LIGHTS_STRENGTH = [2.0, 0.0];\nconst DEFAULT_AMBIENT_RATIO = 0.4;\nconst DEFAULT_DIFFUSE_RATIO = 0.6;\nconst DEFAULT_SPECULAR_RATIO = 0.8;\n\nconst getMemoizedLightPositions = memoize(preprojectLightPositions);\n\n// TODO: support partial update, e.g.\n// `lightedModel.setModuleParameters({diffuseRatio: 0.3});`\nfunction getUniforms(opts = INITIAL_MODULE_OPTIONS) {\n  if (!opts.lightSettings) {\n    return {};\n  }\n\n  const {\n    coordinateSystem,\n    coordinateOrigin,\n    lightSettings: {\n      numberOfLights = 1,\n\n      lightsPosition = DEFAULT_LIGHTS_POSITION,\n      lightsStrength = DEFAULT_LIGHTS_STRENGTH,\n      coordinateSystem: fromCoordinateSystem,\n      coordinateOrigin: fromCoordinateOrigin,\n      modelMatrix = null,\n\n      ambientRatio = DEFAULT_AMBIENT_RATIO,\n      diffuseRatio = DEFAULT_DIFFUSE_RATIO,\n      specularRatio = DEFAULT_SPECULAR_RATIO\n    }\n  } = opts;\n\n  // Pre-project light positions\n  const lightsPositionWorld = getMemoizedLightPositions({\n    lightsPosition,\n    numberOfLights,\n    viewport: opts.viewport,\n    modelMatrix,\n    coordinateSystem,\n    coordinateOrigin,\n    fromCoordinateSystem,\n    fromCoordinateOrigin\n  });\n\n  return {\n    lighting_lightPositions: lightsPositionWorld,\n    lighting_lightStrengths: lightsStrength,\n    lighting_ambientRatio: ambientRatio,\n    lighting_diffuseRatio: diffuseRatio,\n    lighting_specularRatio: specularRatio,\n    lighting_numberOfLights: numberOfLights\n  };\n}\n\n// Pre-project light positions\nfunction preprojectLightPositions({\n  lightsPosition,\n  numberOfLights,\n  viewport,\n  modelMatrix,\n  coordinateSystem,\n  coordinateOrigin,\n  fromCoordinateSystem,\n  fromCoordinateOrigin\n}) {\n  const projectionParameters = {\n    viewport,\n    modelMatrix,\n    coordinateSystem,\n    coordinateOrigin,\n    fromCoordinateSystem,\n    fromCoordinateOrigin\n  };\n\n  const lightsPositionWorld = [];\n  for (let i = 0; i < numberOfLights; i++) {\n    const position = projectPosition(lightsPosition.slice(i * 3, i * 3 + 3), projectionParameters);\n\n    lightsPositionWorld[i * 3] = position[0];\n    lightsPositionWorld[i * 3 + 1] = position[1];\n    lightsPositionWorld[i * 3 + 2] = position[2];\n  }\n\n  return lightsPositionWorld;\n}\n"],"file":"lighting.js"}
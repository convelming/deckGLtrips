{"version":3,"sources":["../../../src/lib/draw-layers.js"],"names":["GL","withParameters","setParameters","clear","log","assert","LOG_PRIORITY_DRAW","renderCount","getPixelRatio","useDevicePixels","window","devicePixelRatio","getGLViewport","gl","viewport","pixelRatio","height","canvas","clientHeight","dimensions","x","y","width","clearCanvas","drawingBufferWidth","drawingBufferHeight","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","drawLayers","layers","viewports","views","onViewportActive","drawPickingColors","deviceRect","parameters","layerFilter","pass","redrawReason","stats","customRender","forEach","viewportOrDescriptor","i","getViewportFromDescriptor","view","id","drawLayersInViewport","drawPickingBuffer","pickingFBO","framebuffer","scissorTest","scissor","clearColor","blend","blendFunc","ONE","ZERO","CONSTANT_ALPHA","blendEquation","FUNC_ADD","blendColor","glViewport","props","clearOpts","color","depth","renderStats","totalCount","length","visibleCount","compositeCount","pickableCount","layer","layerIndex","shouldDrawLayer","isComposite","visible","pickable","isPicking","drawLayerInViewport","logRenderStats","moduleParameters","Object","assign","create","context","pickingActive","uniforms","layerParameters","getObjectHighlightParameters","drawLayer","priority","primitiveCount","hiddenCount","message","increment","highlightedObjectIndex","highlightColor","pickingHighlightColor","Number","isInteger","pickingSelectedColor","encodePickingColor"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* global window */\nimport GL from 'luma.gl/constants';\nimport {withParameters, setParameters, clear} from 'luma.gl';\nimport log from '../utils/log';\nimport assert from '../utils/assert';\n\nconst LOG_PRIORITY_DRAW = 2;\n\nlet renderCount = 0;\n\n// TODO - Exported for pick-layers.js - Move to util?\nexport const getPixelRatio = ({useDevicePixels}) => {\n  assert(typeof useDevicePixels === 'boolean', 'Invalid useDevicePixels');\n  return useDevicePixels && typeof window !== 'undefined' ? window.devicePixelRatio : 1;\n};\n\n// Convert viewport top-left CSS coordinates to bottom up WebGL coordinates\nconst getGLViewport = (gl, {viewport, pixelRatio}) => {\n  // TODO - dummy default for node\n  const height = gl.canvas ? gl.canvas.clientHeight : 100;\n  // Convert viewport top-left CSS coordinates to bottom up WebGL coordinates\n  const dimensions = viewport;\n  return [\n    dimensions.x * pixelRatio,\n    (height - dimensions.y - dimensions.height) * pixelRatio,\n    dimensions.width * pixelRatio,\n    dimensions.height * pixelRatio\n  ];\n};\n\n// Helper functions\n\nfunction clearCanvas(gl, {useDevicePixels}) {\n  // const pixelRatio = getPixelRatio({useDevicePixels});\n  const width = gl.drawingBufferWidth;\n  const height = gl.drawingBufferHeight;\n  // clear depth and color buffers, restoring transparency\n  withParameters(gl, {viewport: [0, 0, width, height]}, () => {\n    gl.clear(GL.COLOR_BUFFER_BIT | GL.DEPTH_BUFFER_BIT);\n  });\n}\n\n// Draw a list of layers in a list of viewports\nexport function drawLayers(\n  gl,\n  {\n    layers,\n    viewports,\n    views,\n    onViewportActive,\n    useDevicePixels,\n    drawPickingColors = false,\n    deviceRect = null,\n    parameters = {},\n    layerFilter = null,\n    pass = 'draw',\n    redrawReason = '',\n    stats,\n    customRender\n  }\n) {\n  if (!customRender) {\n    clearCanvas(gl, {useDevicePixels});\n  }\n\n  // effectManager.preDraw();\n\n  viewports.forEach((viewportOrDescriptor, i) => {\n    const viewport = getViewportFromDescriptor(viewportOrDescriptor);\n    const view = views && views[viewport.id];\n\n    // Update context to point to this viewport\n    onViewportActive(viewport);\n\n    // render this viewport\n    drawLayersInViewport(gl, {\n      layers,\n      viewport,\n      view,\n      useDevicePixels,\n      drawPickingColors,\n      deviceRect,\n      parameters,\n      layerFilter,\n      pass,\n      redrawReason,\n      stats\n    });\n  });\n\n  // effectManager.draw();\n}\n\n// Draws list of layers and viewports into the picking buffer\n// Note: does not sample the buffer, that has to be done by the caller\nexport function drawPickingBuffer(\n  gl,\n  {\n    layers,\n    viewports,\n    onViewportActive,\n    useDevicePixels,\n    pickingFBO,\n    deviceRect: {x, y, width, height},\n    layerFilter = null,\n    redrawReason = ''\n  }\n) {\n  // Make sure we clear scissor test and fbo bindings in case of exceptions\n  // We are only interested in one pixel, no need to render anything else\n  // Note that the callback here is called synchronously.\n  // Set blend mode for picking\n  // always overwrite existing pixel with [r,g,b,layerIndex]\n  return withParameters(\n    gl,\n    {\n      framebuffer: pickingFBO,\n      scissorTest: true,\n      scissor: [x, y, width, height],\n      clearColor: [0, 0, 0, 0]\n    },\n    () => {\n      drawLayers(gl, {\n        layers,\n        viewports,\n        onViewportActive,\n        useDevicePixels,\n        drawPickingColors: true,\n        layerFilter,\n        pass: 'picking',\n        redrawReason,\n        parameters: {\n          blend: true,\n          blendFunc: [gl.ONE, gl.ZERO, gl.CONSTANT_ALPHA, gl.ZERO],\n          blendEquation: gl.FUNC_ADD,\n          blendColor: [0, 0, 0, 0]\n        }\n      });\n    }\n  );\n}\n\n// Draws a list of layers in one viewport\n// TODO - when picking we could completely skip rendering viewports that dont\n// intersect with the picking rect\nfunction drawLayersInViewport(\n  gl,\n  {\n    layers,\n    viewport,\n    view,\n    useDevicePixels,\n    drawPickingColors = false,\n    deviceRect = null,\n    parameters = {},\n    layerFilter,\n    pass = 'draw',\n    redrawReason = '',\n    stats\n  }\n) {\n  const pixelRatio = getPixelRatio({useDevicePixels});\n  const glViewport = getGLViewport(gl, {viewport, pixelRatio});\n\n  if (view && view.props.clear) {\n    const clearOpts = view.props.clear === true ? {color: true, depth: true} : view.props.clear;\n    withParameters(\n      gl,\n      {\n        scissorTest: true,\n        scissor: glViewport\n      },\n      () => clear(gl, clearOpts)\n    );\n  }\n\n  // render layers in normal colors\n  const renderStats = {\n    totalCount: layers.length,\n    visibleCount: 0,\n    compositeCount: 0,\n    pickableCount: 0\n  };\n\n  // const {x, y, width, height} = deviceRect || [];\n\n  setParameters(gl, parameters || {});\n\n  // render layers in normal colors\n  layers.forEach((layer, layerIndex) => {\n    // Check if we should draw layer\n    let shouldDrawLayer = !layer.isComposite && layer.props.visible;\n    if (drawPickingColors) {\n      shouldDrawLayer = shouldDrawLayer && layer.props.pickable;\n    }\n    if (shouldDrawLayer && layerFilter) {\n      shouldDrawLayer = layerFilter({layer, viewport, isPicking: drawPickingColors});\n    }\n\n    // Calculate stats\n    if (shouldDrawLayer && layer.props.pickable) {\n      renderStats.pickableCount++;\n    }\n    if (layer.isComposite) {\n      renderStats.compositeCount++;\n    }\n\n    // Draw the layer\n    if (shouldDrawLayer) {\n      renderStats.visibleCount++;\n\n      drawLayerInViewport({\n        gl,\n        layer,\n        layerIndex,\n        drawPickingColors,\n        pixelRatio,\n        glViewport,\n        parameters\n      });\n    }\n  });\n\n  renderCount++;\n\n  logRenderStats({renderStats, pass, redrawReason, stats});\n}\n\nfunction drawLayerInViewport({\n  gl,\n  layer,\n  layerIndex,\n  drawPickingColors,\n  pixelRatio,\n  glViewport,\n  parameters\n}) {\n  const moduleParameters = Object.assign(Object.create(layer.props), {\n    viewport: layer.context.viewport,\n    pickingActive: drawPickingColors ? 1 : 0,\n    devicePixelRatio: pixelRatio\n  });\n\n  const uniforms = Object.assign({}, layer.context.uniforms, {layerIndex});\n\n  // All parameter resolving is done here instead of the layer\n  // Blend parameters must not be overriden\n  const layerParameters = Object.assign({}, layer.props.parameters || {}, parameters);\n\n  Object.assign(layerParameters, {\n    viewport: glViewport\n  });\n\n  if (drawPickingColors) {\n    Object.assign(layerParameters, {\n      blendColor: [0, 0, 0, (layerIndex + 1) / 255]\n    });\n  } else {\n    Object.assign(moduleParameters, getObjectHighlightParameters(layer));\n  }\n\n  layer.drawLayer({\n    moduleParameters,\n    uniforms,\n    parameters: layerParameters\n  });\n}\n\nfunction logRenderStats({renderStats, pass, redrawReason, stats}) {\n  if (log.priority >= LOG_PRIORITY_DRAW) {\n    const {totalCount, visibleCount, compositeCount, pickableCount} = renderStats;\n    const primitiveCount = totalCount - compositeCount;\n    const hiddenCount = primitiveCount - visibleCount;\n\n    let message = '';\n    message += `RENDER #${renderCount} \\\n${visibleCount} (of ${totalCount} layers) to ${pass} because ${redrawReason} `;\n    if (log.priority > LOG_PRIORITY_DRAW) {\n      message += `\\\n(${hiddenCount} hidden, ${compositeCount} composite ${pickableCount} pickable)`;\n    }\n\n    log.log(LOG_PRIORITY_DRAW, message)();\n\n    if (stats) {\n      stats.increment('redraw layers', visibleCount);\n    }\n  }\n}\n\n// Get a viewport from a viewport descriptor (which can be a plain viewport)\nfunction getViewportFromDescriptor(viewportOrDescriptor) {\n  return viewportOrDescriptor.viewport ? viewportOrDescriptor.viewport : viewportOrDescriptor;\n}\n\n/**\n * Returns the picking color of currenlty selected object of the given 'layer'.\n * @return {Array} - the picking color or null if layers selected object is invalid.\n */\nfunction getObjectHighlightParameters(layer) {\n  // TODO - inefficient to update settings every render?\n  // TODO: Add warning if 'highlightedObjectIndex' is > numberOfInstances of the model.\n  const {highlightedObjectIndex, highlightColor} = layer.props;\n  const parameters = {\n    pickingHighlightColor: highlightColor\n  };\n\n  // Update picking module settings if highlightedObjectIndex is set.\n  // This will overwrite any settings from auto highlighting.\n  if (Number.isInteger(highlightedObjectIndex)) {\n    parameters.pickingSelectedColor =\n      highlightedObjectIndex >= 0 ? layer.encodePickingColor(highlightedObjectIndex) : null;\n  }\n  return parameters;\n}\n"],"file":"draw-layers.js"}
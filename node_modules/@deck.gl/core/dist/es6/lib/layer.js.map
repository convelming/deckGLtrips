{"version":3,"sources":["../../../src/lib/layer.js"],"names":["COORDINATE_SYSTEM","AttributeManager","removeLayerInSeer","diffProps","count","log","GL","withParameters","assert","projectPosition","getWorldPosition","Component","LayerState","worldToPixels","LOG_PRIORITY_UPDATE","EMPTY_ARRAY","Object","freeze","noop","defaultProps","data","type","value","async","dataComparator","dataTransform","fetch","url","then","response","json","updateTriggers","numInstances","undefined","visible","pickable","opacity","min","max","onHover","onClick","coordinateSystem","LNGLAT","coordinateOrigin","wrapLongitude","parameters","uniforms","framebuffer","animation","getPolygonOffset","layerIndex","highlightedObjectIndex","autoHighlight","highlightColor","Layer","toString","className","constructor","layerName","name","props","id","setState","updateObject","setChangeFlags","stateChanged","assign","state","setNeedsRedraw","redraw","internalState","needsRedraw","setLayerNeedsUpdate","context","layerManager","setNeedsUpdate","String","getNeedsRedraw","clearRedrawFlags","_getNeedsRedraw","needsUpdate","shouldUpdateState","_getUpdateParams","isPickable","getModels","models","model","getSingleModel","getAttributeManager","attributeManager","getCurrentLayer","layer","getFirstObject","object","project","xyz","viewport","worldPosition","modelMatrix","pixelProjectionMatrix","x","y","z","length","unproject","xy","Array","isArray","projectFlat","lngLat","deprecated","unprojectFlat","use64bitProjection","fp64","LNGLAT_DEPRECATED","once","use64bitPositions","screenToDevicePixels","screenPixels","devicePixelRatio","window","nullPickingColor","encodePickingColor","i","decodePickingColor","color","Uint8Array","i1","i2","i3","index","initializeState","Error","oldProps","changeFlags","propsOrDataChanged","updateState","dataChanged","invalidateAll","finalizeState","delete","finalize","draw","opts","getPickingInfo","info","mode","invalidateAttribute","diffReason","invalidate","updateAttributes","getNumInstances","update","transitions","buffers","ignoreUnknownAttributes","changedAttributes","getChangedAttributes","clearChangedFlags","setAttributes","updateTransition","calculateInstancePickingColors","attribute","size","pickingColor","_clearInstancePickingColor","instancePickingColors","attributes","_clearPickingColor","pickingColors","clearPickingColor","copyPickingColors","colors","Uint8ClampedArray","restorePickingColors","_initialize","gl","_initState","propsChanged","viewportChanged","_updateState","program","geometry","_update","stateNeedsUpdate","updateParams","isComposite","_renderLayers","_updateBaseUniforms","setInstanceCount","clearChangeFlags","resetOldProps","_finalize","drawLayer","moduleParameters","picking_uActive","setModuleParameters","animationProps","_setAnimationProps","offsets","polygonOffset","pickLayer","getChangeFlags","flags","updateTriggersChanged","keys","join","somethingChanged","printChangeFlags","newProps","key","_activeUpdateTrigger","updateModuleSettings","getOldProps","attributeManagerNeedsRedraw","modelNeedsRedraw","_modelNeedsRedraw","_getAttributeManager","stats","addInstanced","UNSIGNED_BYTE","onAsyncPropUpdated","_onAsyncPropUpdated","bind","setAsyncProps","_transferState","oldLayer","component","userData","propName","_checkRequiredProp","propertyName","condition","Math","pow","setUniforms","uniformMap","is64bitEnabled"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint-disable react/no-direct-mutation-state */\n/* global fetch */\n/* global window */\nimport {COORDINATE_SYSTEM} from './constants';\nimport AttributeManager from './attribute-manager';\nimport {removeLayerInSeer} from './seer-integration';\nimport {diffProps} from '../lifecycle/props';\nimport {count} from '../utils/count';\nimport log from '../utils/log';\nimport GL from 'luma.gl/constants';\nimport {withParameters} from 'luma.gl';\nimport assert from '../utils/assert';\nimport {projectPosition, getWorldPosition} from '../shaderlib/project/project-functions';\n\nimport Component from '../lifecycle/component';\nimport LayerState from './layer-state';\n\nimport {worldToPixels} from 'viewport-mercator-project';\n\nconst LOG_PRIORITY_UPDATE = 1;\n\nconst EMPTY_ARRAY = Object.freeze([]);\nconst noop = () => {};\n\nconst defaultProps = {\n  // data: Special handling for null, see below\n  data: {type: 'data', value: EMPTY_ARRAY, async: true},\n  dataComparator: null,\n  dataTransform: data => data,\n  fetch: url => fetch(url).then(response => response.json()),\n  updateTriggers: {}, // Update triggers: a core change detection mechanism in deck.gl\n  numInstances: undefined,\n\n  visible: true,\n  pickable: false,\n  opacity: {type: 'number', min: 0, max: 1, value: 0.8},\n\n  onHover: noop,\n  onClick: noop,\n\n  coordinateSystem: COORDINATE_SYSTEM.LNGLAT,\n  coordinateOrigin: [0, 0, 0],\n  wrapLongitude: false,\n\n  parameters: {},\n  uniforms: {},\n  framebuffer: null,\n\n  animation: null, // Passed prop animation functions to evaluate props\n\n  // Offset depth based on layer index to avoid z-fighting.\n  // Negative values pull layer towards the camera\n  // https://www.opengl.org/archives/resources/faq/technical/polygonoffset.htm\n  getPolygonOffset: ({layerIndex}) => [0, -layerIndex * 100],\n\n  // Selection/Highlighting\n  highlightedObjectIndex: null,\n  autoHighlight: false,\n  highlightColor: [0, 0, 128, 128]\n};\n\nexport default class Layer extends Component {\n  toString() {\n    const className = this.constructor.layerName || this.constructor.name;\n    return `${className}({id: '${this.props.id}'})`;\n  }\n\n  // Public API\n\n  // Updates selected state members and marks the object for redraw\n  setState(updateObject) {\n    this.setChangeFlags({stateChanged: true});\n    Object.assign(this.state, updateObject);\n    this.setNeedsRedraw();\n  }\n\n  // Sets the redraw flag for this layer, will trigger a redraw next animation frame\n  setNeedsRedraw(redraw = true) {\n    if (this.internalState) {\n      this.internalState.needsRedraw = redraw;\n    }\n  }\n\n  // This layer needs a deep update\n  // TODO - Need to align with existing needsUpdate before uncommenting\n  // For now async props will call layerManager directly\n  setLayerNeedsUpdate() {\n    this.context.layerManager.setNeedsUpdate(String(this));\n  }\n\n  // Checks state of attributes and model\n  getNeedsRedraw({clearRedrawFlags = false} = {}) {\n    return this._getNeedsRedraw(clearRedrawFlags);\n  }\n\n  // Checks if layer attributes needs updating\n  needsUpdate() {\n    // Call subclass lifecycle method\n    return this.shouldUpdateState(this._getUpdateParams());\n    // End lifecycle method\n  }\n\n  // Returns true if the layer is pickable and visible.\n  isPickable() {\n    return this.props.pickable && this.props.visible;\n  }\n\n  // Return an array of models used by this layer, can be overriden by layer subclass\n  getModels() {\n    return this.state && (this.state.models || (this.state.model ? [this.state.model] : []));\n  }\n\n  // TODO - Gradually phase out, does not support multi model layers\n  getSingleModel() {\n    return this.state && this.state.model;\n  }\n\n  getAttributeManager() {\n    return this.internalState && this.internalState.attributeManager;\n  }\n\n  // Returns the most recent layer that matched to this state\n  // (When reacting to an async event, this layer may no longer be the latest)\n  getCurrentLayer() {\n    return this.internalState && this.internalState.layer;\n  }\n\n  // Use iteration (the only required capability on data) to get first element\n  // deprecated since we are effectively only supporting Arrays\n  getFirstObject() {\n    const {data} = this.props;\n    for (const object of data) {\n      return object;\n    }\n    return null;\n  }\n\n  // PROJECTION METHODS\n\n  // Projects a point with current map state (lat, lon, zoom, pitch, bearing)\n  // From the current layer's coordinate system to screen\n  project(xyz) {\n    const {viewport} = this.context;\n    const worldPosition = getWorldPosition(xyz, {\n      viewport,\n      modelMatrix: this.props.modelMatrix,\n      coordinateOrigin: this.props.coordinateOrigin,\n      coordinateSystem: this.props.coordinateSystem\n    });\n    const [x, y, z] = worldToPixels(worldPosition, viewport.pixelProjectionMatrix);\n    return xyz.length === 2 ? [x, y] : [x, y, z];\n  }\n\n  // Note: this does not reverse `project`.\n  // Always unprojects to the viewport's coordinate system\n  unproject(xy) {\n    const {viewport} = this.context;\n    assert(Array.isArray(xy));\n    return viewport.unproject(xy);\n  }\n\n  projectPosition(xyz) {\n    assert(Array.isArray(xyz));\n\n    return projectPosition(xyz, {\n      viewport: this.context.viewport,\n      modelMatrix: this.props.modelMatrix,\n      coordinateOrigin: this.props.coordinateOrigin,\n      coordinateSystem: this.props.coordinateSystem\n    });\n  }\n\n  // DEPRECATE: This does not handle offset modes\n  projectFlat(lngLat) {\n    log.deprecated('layer.projectFlat', 'layer.projectPosition')();\n    const {viewport} = this.context;\n    assert(Array.isArray(lngLat));\n    return viewport.projectFlat(lngLat);\n  }\n\n  // DEPRECATE: This is not meaningful in offset modes\n  unprojectFlat(xy) {\n    log.deprecated('layer.unprojectFlat')();\n    const {viewport} = this.context;\n    assert(Array.isArray(xy));\n    return viewport.unprojectFlat(xy);\n  }\n\n  use64bitProjection() {\n    if (this.props.fp64) {\n      if (this.props.coordinateSystem === COORDINATE_SYSTEM.LNGLAT_DEPRECATED) {\n        return true;\n      }\n      log.once(\n        0,\n        `Legacy 64-bit mode only works with coordinateSystem set to\n        COORDINATE_SYSTEM.LNGLAT_DEPRECATED. Rendering in 32-bit mode instead`\n      )();\n    }\n\n    return false;\n  }\n\n  use64bitPositions() {\n    return this.props.fp64 || this.props.coordinateSystem === COORDINATE_SYSTEM.LNGLAT;\n  }\n\n  // TODO - needs to refer to context for devicePixels setting\n  screenToDevicePixels(screenPixels) {\n    log.deprecated('screenToDevicePixels', 'DeckGL prop useDevicePixels for conversion')();\n    const devicePixelRatio = typeof window !== 'undefined' ? window.devicePixelRatio : 1;\n    return screenPixels * devicePixelRatio;\n  }\n\n  // Returns the picking color that doesn't match any subfeature\n  // Use if some graphics do not belong to any pickable subfeature\n  // @return {Array} - a black color\n  nullPickingColor() {\n    return [0, 0, 0];\n  }\n\n  // Returns the picking color that doesn't match any subfeature\n  // Use if some graphics do not belong to any pickable subfeature\n  encodePickingColor(i) {\n    assert((((i + 1) >> 24) & 255) === 0, 'index out of picking color range');\n    return [(i + 1) & 255, ((i + 1) >> 8) & 255, (((i + 1) >> 8) >> 8) & 255];\n  }\n\n  // Returns the index corresponding to a picking color that doesn't match any subfeature\n  // @param {Uint8Array} color - color array to be decoded\n  // @return {Array} - the decoded picking color\n  decodePickingColor(color) {\n    assert(color instanceof Uint8Array);\n    const [i1, i2, i3] = color;\n    // 1 was added to seperate from no selection\n    const index = i1 + i2 * 256 + i3 * 65536 - 1;\n    return index;\n  }\n\n  // //////////////////////////////////////////////////\n  // LIFECYCLE METHODS, overridden by the layer subclasses\n\n  // Called once to set up the initial state\n  // App can create WebGL resources\n  initializeState() {\n    throw new Error(`Layer ${this} has not defined initializeState`);\n  }\n\n  // Let's layer control if updateState should be called\n  shouldUpdateState({oldProps, props, context, changeFlags}) {\n    return changeFlags.propsOrDataChanged;\n  }\n\n  // Default implementation, all attributes will be invalidated and updated\n  // when data changes\n  updateState({oldProps, props, context, changeFlags}) {\n    const attributeManager = this.getAttributeManager();\n    if (changeFlags.dataChanged && attributeManager) {\n      attributeManager.invalidateAll();\n    }\n  }\n\n  // Called once when layer is no longer matched and state will be discarded\n  // App can destroy WebGL resources here\n  finalizeState() {\n    for (const model of this.getModels()) {\n      model.delete();\n    }\n    const attributeManager = this.getAttributeManager();\n    if (attributeManager) {\n      attributeManager.finalize();\n    }\n  }\n\n  // If state has a model, draw it with supplied uniforms\n  draw(opts) {\n    for (const model of this.getModels()) {\n      model.draw(opts);\n    }\n  }\n\n  // called to populate the info object that is passed to the event handler\n  // @return null to cancel event\n  getPickingInfo({info, mode}) {\n    const {index} = info;\n\n    if (index >= 0) {\n      // If props.data is an indexable array, get the object\n      if (Array.isArray(this.props.data)) {\n        info.object = this.props.data[index];\n      }\n    }\n\n    return info;\n  }\n\n  // END LIFECYCLE METHODS\n  // //////////////////////////////////////////////////\n\n  // INTERNAL METHODS\n\n  // Default implementation of attribute invalidation, can be redefined\n  invalidateAttribute(name = 'all', diffReason = '') {\n    const attributeManager = this.getAttributeManager();\n    if (!attributeManager) {\n      return;\n    }\n\n    if (name === 'all') {\n      log.log(LOG_PRIORITY_UPDATE, `updateTriggers invalidating all attributes: ${diffReason}`)();\n      attributeManager.invalidateAll();\n    } else {\n      log.log(\n        LOG_PRIORITY_UPDATE,\n        `updateTriggers invalidating attribute ${name}: ${diffReason}`\n      )();\n      attributeManager.invalidate(name);\n    }\n  }\n\n  // Calls attribute manager to update any WebGL attributes\n  updateAttributes(props) {\n    const attributeManager = this.getAttributeManager();\n    if (!attributeManager) {\n      return;\n    }\n\n    // Figure out data length\n    const numInstances = this.getNumInstances(props);\n\n    attributeManager.update({\n      data: props.data,\n      numInstances,\n      props,\n      transitions: props.transitions,\n      buffers: props,\n      context: this,\n      // Don't worry about non-attribute props\n      ignoreUnknownAttributes: true\n    });\n\n    const model = this.getSingleModel();\n    if (model) {\n      const changedAttributes = attributeManager.getChangedAttributes({clearChangedFlags: true});\n      model.setAttributes(changedAttributes);\n    }\n  }\n\n  // Update attribute transition\n  updateTransition() {\n    const attributeManager = this.getAttributeManager();\n    if (attributeManager) {\n      attributeManager.updateTransition();\n    }\n  }\n\n  calculateInstancePickingColors(attribute, {numInstances}) {\n    const {value, size} = attribute;\n    // add 1 to index to seperate from no selection\n    for (let i = 0; i < numInstances; i++) {\n      const pickingColor = this.encodePickingColor(i);\n      value[i * size + 0] = pickingColor[0];\n      value[i * size + 1] = pickingColor[1];\n      value[i * size + 2] = pickingColor[2];\n    }\n  }\n\n  // Sets the specified instanced picking color to null picking color. Used for multi picking.\n  _clearInstancePickingColor(color) {\n    const {instancePickingColors} = this.getAttributeManager().attributes;\n    const {value, size} = instancePickingColors;\n\n    const i = this.decodePickingColor(color);\n    value[i * size + 0] = 0;\n    value[i * size + 1] = 0;\n    value[i * size + 2] = 0;\n\n    // TODO: Optimize this to use sub-buffer update!\n    instancePickingColors.update({value});\n  }\n\n  // Sets all occurrences of the specified picking color to null picking color. Used for multi picking.\n  _clearPickingColor(color) {\n    const {pickingColors} = this.getAttributeManager().attributes;\n    const {value} = pickingColors;\n\n    for (let i = 0; i < value.length; i += 3) {\n      if (value[i + 0] === color[0] && value[i + 1] === color[1] && value[i + 2] === color[2]) {\n        value[i + 0] = 0;\n        value[i + 1] = 0;\n        value[i + 2] = 0;\n      }\n    }\n\n    // TODO: Optimize this to use sub-buffer update!\n    pickingColors.update({value});\n  }\n\n  // This method figures out if we use instance colors or not\n  // and calls _clearInstancePickingColor or _clearPickingColor\n  clearPickingColor(color) {\n    if (this.getAttributeManager().attributes.pickingColors) {\n      this._clearPickingColor(color);\n    } else {\n      this._clearInstancePickingColor(color);\n    }\n  }\n\n  copyPickingColors() {\n    const {pickingColors, instancePickingColors} = this.getAttributeManager().attributes;\n    const colors = pickingColors || instancePickingColors;\n\n    return new Uint8ClampedArray(colors.value);\n  }\n\n  restorePickingColors(value) {\n    const {pickingColors, instancePickingColors} = this.getAttributeManager().attributes;\n    const colors = pickingColors || instancePickingColors;\n\n    colors.update({value});\n  }\n\n  // Deduces numer of instances. Intention is to support:\n  // - Explicit setting of numInstances\n  // - Auto-deduction for ES6 containers that define a size member\n  // - Auto-deduction for Classic Arrays via the built-in length attribute\n  // - Auto-deduction via arrays\n  getNumInstances(props) {\n    props = props || this.props;\n\n    // First check if the layer has set its own value\n    if (this.state && this.state.numInstances !== undefined) {\n      return this.state.numInstances;\n    }\n\n    // Check if app has provided an explicit value\n    if (props.numInstances !== undefined) {\n      return props.numInstances;\n    }\n\n    // Use container library to get a count for any ES6 container or object\n    const {data} = this.props;\n    return count(data);\n  }\n\n  // LAYER MANAGER API\n  // Should only be called by the deck.gl LayerManager class\n\n  // Called by layer manager when a new layer is found\n  /* eslint-disable max-statements */\n  _initialize() {\n    assert(this.context.gl);\n\n    this._initState();\n\n    // Call subclass lifecycle methods\n    this.initializeState(this.context);\n    // End subclass lifecycle methods\n\n    // TODO deprecated, for backwards compatibility with older layers\n    // in case layer resets state\n    this.state.attributeManager = this.getAttributeManager();\n\n    // initializeState callback tends to clear state\n    this.setChangeFlags({dataChanged: true, propsChanged: true, viewportChanged: true});\n\n    this._updateState();\n\n    const model = this.getSingleModel();\n    if (model) {\n      model.id = this.props.id;\n      model.program.id = `${this.props.id}-program`;\n      model.geometry.id = `${this.props.id}-geometry`;\n    }\n  }\n\n  // Called by layer manager\n  // if this layer is new (not matched with an existing layer) oldProps will be empty object\n  _update() {\n    // Call subclass lifecycle method\n    const stateNeedsUpdate = this.needsUpdate();\n    // End lifecycle method\n\n    if (stateNeedsUpdate) {\n      this._updateState();\n    }\n  }\n  /* eslint-enable max-statements */\n\n  // Common code for _initialize and _update\n  _updateState() {\n    const updateParams = this._getUpdateParams();\n\n    // Call subclass lifecycle methods\n    this.updateState(updateParams);\n    // End subclass lifecycle methods\n\n    if (this.isComposite) {\n      // Render or update previously rendered sublayers\n      this._renderLayers(updateParams);\n    } else {\n      this.setNeedsRedraw();\n      // Add any subclass attributes\n      this.updateAttributes(this.props);\n      this._updateBaseUniforms();\n\n      // Note: Automatic instance count update only works for single layers\n      if (this.state.model) {\n        this.state.model.setInstanceCount(this.getNumInstances());\n      }\n    }\n\n    this.clearChangeFlags();\n    this.internalState.resetOldProps();\n  }\n\n  // Called by manager when layer is about to be disposed\n  // Note: not guaranteed to be called on application shutdown\n  _finalize() {\n    assert(this.internalState && this.state);\n\n    // Call subclass lifecycle method\n    this.finalizeState(this.context);\n    // End lifecycle method\n    removeLayerInSeer(this.id);\n  }\n\n  // Calculates uniforms\n  drawLayer({moduleParameters = null, uniforms = {}, parameters = {}}) {\n    if (!uniforms.picking_uActive) {\n      this.updateTransition();\n    }\n\n    // TODO/ib - hack move to luma Model.draw\n    if (moduleParameters) {\n      this.setModuleParameters(moduleParameters);\n    }\n\n    // Hack/ib - define a public luma function\n    const {animationProps} = this.context;\n    if (animationProps) {\n      for (const model of this.getModels()) {\n        model._setAnimationProps(animationProps);\n      }\n    }\n\n    // Apply polygon offset to avoid z-fighting\n    // TODO - move to draw-layers\n    const {getPolygonOffset} = this.props;\n    const offsets = (getPolygonOffset && getPolygonOffset(uniforms)) || [0, 0];\n    parameters.polygonOffset = offsets;\n\n    // Call subclass lifecycle method\n    withParameters(this.context.gl, parameters, () => {\n      this.draw({moduleParameters, uniforms, parameters, context: this.context});\n    });\n    // End lifecycle method\n  }\n\n  // {uniforms = {}, ...opts}\n  pickLayer(opts) {\n    // Call subclass lifecycle method\n    return this.getPickingInfo(opts);\n    // End lifecycle method\n  }\n\n  // Helper methods\n  getChangeFlags() {\n    return this.internalState.changeFlags;\n  }\n\n  // Dirty some change flags, will be handled by updateLayer\n  /* eslint-disable complexity */\n  setChangeFlags(flags) {\n    this.internalState.changeFlags = this.internalState.changeFlags || {};\n    const changeFlags = this.internalState.changeFlags;\n\n    // Update primary flags\n    if (flags.dataChanged && !changeFlags.dataChanged) {\n      changeFlags.dataChanged = flags.dataChanged;\n      log.log(LOG_PRIORITY_UPDATE + 1, () => `dataChanged: ${flags.dataChanged} in ${this.id}`)();\n    }\n    if (flags.updateTriggersChanged && !changeFlags.updateTriggersChanged) {\n      changeFlags.updateTriggersChanged =\n        changeFlags.updateTriggersChanged && flags.updateTriggersChanged\n          ? Object.assign({}, flags.updateTriggersChanged, changeFlags.updateTriggersChanged)\n          : flags.updateTriggersChanged || changeFlags.updateTriggersChanged;\n      log.log(\n        LOG_PRIORITY_UPDATE + 1,\n        () =>\n          'updateTriggersChanged: ' +\n          `${Object.keys(flags.updateTriggersChanged).join(', ')} in ${this.id}`\n      )();\n    }\n    if (flags.propsChanged && !changeFlags.propsChanged) {\n      changeFlags.propsChanged = flags.propsChanged;\n      log.log(LOG_PRIORITY_UPDATE + 1, () => `propsChanged: ${flags.propsChanged} in ${this.id}`)();\n    }\n    if (flags.viewportChanged && !changeFlags.viewportChanged) {\n      changeFlags.viewportChanged = flags.viewportChanged;\n      log.log(\n        LOG_PRIORITY_UPDATE + 2,\n        () => `viewportChanged: ${flags.viewportChanged} in ${this.id}`\n      )();\n    }\n    if (flags.stateChanged && !changeFlags.stateChanged) {\n      changeFlags.stateChanged = flags.stateChanged;\n      log.log(LOG_PRIORITY_UPDATE + 1, () => `stateChanged: ${flags.stateChanged} in ${this.id}`)();\n    }\n\n    // Update composite flags\n    const propsOrDataChanged =\n      flags.dataChanged || flags.updateTriggersChanged || flags.propsChanged;\n    changeFlags.propsOrDataChanged = changeFlags.propsOrDataChanged || propsOrDataChanged;\n    changeFlags.somethingChanged =\n      changeFlags.somethingChanged ||\n      propsOrDataChanged ||\n      flags.viewportChanged ||\n      flags.stateChanged;\n  }\n  /* eslint-enable complexity */\n\n  // Clear all changeFlags, typically after an update\n  clearChangeFlags() {\n    this.internalState.changeFlags = {\n      // Primary changeFlags, can be strings stating reason for change\n      dataChanged: false,\n      propsChanged: false,\n      updateTriggersChanged: false,\n      viewportChanged: false,\n      stateChanged: false,\n\n      // Derived changeFlags\n      propsOrDataChanged: false,\n      somethingChanged: false\n    };\n  }\n\n  printChangeFlags() {\n    const flags = this.internalState.changeFlags;\n    return `\\\n${flags.dataChanged ? 'data ' : ''}\\\n${flags.propsChanged ? 'props ' : ''}\\\n${flags.updateTriggersChanged ? 'triggers ' : ''}\\\n${flags.viewportChanged ? 'viewport' : ''}\\\n`;\n  }\n\n  // Compares the layers props with old props from a matched older layer\n  // and extracts change flags that describe what has change so that state\n  // can be update correctly with minimal effort\n  diffProps(newProps, oldProps) {\n    const changeFlags = diffProps(newProps, oldProps);\n\n    // iterate over changedTriggers\n    if (changeFlags.updateTriggersChanged) {\n      for (const key in changeFlags.updateTriggersChanged) {\n        if (changeFlags.updateTriggersChanged[key]) {\n          this._activeUpdateTrigger(key);\n        }\n      }\n    }\n\n    return this.setChangeFlags(changeFlags);\n  }\n\n  setModuleParameters(moduleParameters) {\n    for (const model of this.getModels()) {\n      model.updateModuleSettings(moduleParameters);\n    }\n  }\n\n  // PRIVATE METHODS\n\n  _getUpdateParams() {\n    return {\n      props: this.props,\n      oldProps: this.internalState.getOldProps(),\n      context: this.context,\n      changeFlags: this.internalState.changeFlags\n    };\n  }\n\n  // Checks state of attributes and model\n  _getNeedsRedraw(clearRedrawFlags) {\n    // this method may be called by the render loop as soon a the layer\n    // has been created, so guard against uninitialized state\n    if (!this.internalState) {\n      return false;\n    }\n\n    let redraw = false;\n    redraw = redraw || (this.internalState.needsRedraw && this.id);\n    this.internalState.needsRedraw = this.internalState.needsRedraw && !clearRedrawFlags;\n\n    // TODO - is attribute manager needed? - Model should be enough.\n    const attributeManager = this.getAttributeManager();\n    const attributeManagerNeedsRedraw =\n      attributeManager && attributeManager.getNeedsRedraw({clearRedrawFlags});\n    const modelNeedsRedraw = this._modelNeedsRedraw(clearRedrawFlags);\n    redraw = redraw || attributeManagerNeedsRedraw || modelNeedsRedraw;\n\n    return redraw;\n  }\n\n  _modelNeedsRedraw(clearRedrawFlags) {\n    let redraw = false;\n\n    for (const model of this.getModels()) {\n      let modelNeedsRedraw = model.getNeedsRedraw({clearRedrawFlags});\n      if (modelNeedsRedraw && typeof modelNeedsRedraw !== 'string') {\n        modelNeedsRedraw = `model ${model.id}`;\n      }\n      redraw = redraw || modelNeedsRedraw;\n    }\n\n    return redraw;\n  }\n\n  // Create new attribute manager\n  _getAttributeManager() {\n    return new AttributeManager(this.context.gl, {\n      id: this.props.id,\n      stats: this.context.stats\n    });\n  }\n\n  _initState() {\n    assert(!this.internalState && !this.state);\n\n    const attributeManager = this._getAttributeManager();\n\n    if (attributeManager) {\n      // All instanced layers get instancePickingColors attribute by default\n      // Their shaders can use it to render a picking scene\n      // TODO - this slightly slows down non instanced layers\n      attributeManager.addInstanced({\n        instancePickingColors: {\n          type: GL.UNSIGNED_BYTE,\n          size: 3,\n          update: this.calculateInstancePickingColors\n        }\n      });\n    }\n\n    this.internalState = new LayerState({\n      attributeManager,\n      layer: this\n    });\n\n    this.state = {};\n    // TODO deprecated, for backwards compatibility with older layers\n    this.state.attributeManager = attributeManager;\n\n    this.internalState.onAsyncPropUpdated = this._onAsyncPropUpdated.bind(this);\n\n    // Ensure any async props are updated\n    this.internalState.setAsyncProps(this.props);\n  }\n\n  // Called by layer manager to transfer state from an old layer\n  _transferState(oldLayer) {\n    const {state, internalState} = oldLayer;\n    assert(state && internalState);\n\n    if (this === oldLayer) {\n      return;\n    }\n\n    // Move internalState\n    this.internalState = internalState;\n    this.internalState.component = this;\n\n    // Move state\n    this.state = state;\n    // Deprecated: layer references on `state`\n    state.layer = this;\n    // We keep the state ref on old layers to support async actions\n    // oldLayer.state = null;\n\n    // Ensure any async props are updated\n    this.internalState.setAsyncProps(this.props);\n\n    // Update model layer reference\n    for (const model of this.getModels()) {\n      model.userData.layer = this;\n    }\n\n    // Ensure any async props are updated\n    this.internalState.setAsyncProps(this.props);\n\n    this.diffProps(this.props, this.internalState.getOldProps());\n  }\n\n  _onAsyncPropUpdated() {\n    this.diffProps(this.props, this.internalState.getOldProps());\n    this.setLayerNeedsUpdate();\n  }\n\n  // Operate on each changed triggers, will be called when an updateTrigger changes\n  _activeUpdateTrigger(propName) {\n    this.invalidateAttribute(propName);\n  }\n\n  //  Helper to check that required props are supplied\n  _checkRequiredProp(propertyName, condition) {\n    const value = this.props[propertyName];\n    if (value === undefined) {\n      throw new Error(`Property ${propertyName} undefined in layer ${this}`);\n    }\n    if (condition && !condition(value)) {\n      throw new Error(`Bad property ${propertyName} in layer ${this}`);\n    }\n  }\n\n  _updateBaseUniforms() {\n    const uniforms = {\n      // apply gamma to opacity to make it visually \"linear\"\n      opacity:\n        typeof this.props.opacity === 'function'\n          ? animationProps => Math.pow(this.props.opacity(animationProps), 1 / 2.2)\n          : Math.pow(this.props.opacity, 1 / 2.2)\n    };\n    for (const model of this.getModels()) {\n      model.setUniforms(uniforms);\n    }\n  }\n\n  // DEPRECATED METHODS\n\n  // Updates selected state members and marks the object for redraw\n  setUniforms(uniformMap) {\n    for (const model of this.getModels()) {\n      model.setUniforms(uniformMap);\n    }\n\n    // TODO - set needsRedraw on the model(s)?\n    this.setNeedsRedraw();\n    log.deprecated('layer.setUniforms', 'model.setUniforms')();\n  }\n\n  is64bitEnabled() {\n    log.deprecated('is64bitEnabled', 'use64bitProjection')();\n    return this.use64bitProjection();\n  }\n}\n\nLayer.layerName = 'Layer';\nLayer.defaultProps = defaultProps;\n"],"file":"layer.js"}
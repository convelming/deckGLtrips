{"version":3,"sources":["../../../src/components/base-control.js"],"names":["Component","PropTypes","WebMercatorViewport","propTypes","captureScroll","bool","captureDrag","captureClick","captureDoubleClick","defaultProps","contextTypes","viewport","instanceOf","isDragging","eventManager","object","BaseControl","props","_events","_onContainerLoad","bind","ref","context","events","off","wheel","_onScroll","panstart","_onDrag","click","_onClick","dblclick","_onDoubleClick","on","evt","stopPropagation"],"mappings":"8xDAmBA,OAAQA,SAAR,KAAwB,OAAxB,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,CACA,MAAOC,CAAAA,mBAAP,KAAgC,2BAAhC,C,GAEMC,CAAAA,SAAS,CAAG,CAEhBC,aAAa,CAAEH,SAAS,CAACI,IAFT,CAIhBC,WAAW,CAAEL,SAAS,CAACI,IAJP,CAMhBE,YAAY,CAAEN,SAAS,CAACI,IANR,CAQhBG,kBAAkB,CAAEP,SAAS,CAACI,IARd,C,CAWZI,YAAY,CAAG,CACnBL,aAAa,GADM,CAEnBE,WAAW,GAFQ,CAGnBC,YAAY,GAHO,CAInBC,kBAAkB,GAJC,C,CAOfE,YAAY,CAAG,CACnBC,QAAQ,CAAEV,SAAS,CAACW,UAAV,CAAqBV,mBAArB,CADS,CAEnBW,UAAU,CAAEZ,SAAS,CAACI,IAFH,CAGnBS,YAAY,CAAEb,SAAS,CAACc,MAHL,C,CAaAC,W,sBAEnB,qBAAYC,KAAZ,CAAmB,gKACXA,KADW,GAGjB,MAAKC,OAAL,CAAe,IAHE,CAKjB,MAAKC,gBAAL,CAAwB,MAAKA,gBAAL,CAAsBC,IAAtB,+BALP,MAMlB,C,2HAEgBC,G,CAAK,IACbP,CAAAA,YADa,CACG,KAAKQ,OADR,CACbR,YADa,CAIpB,GAAKA,YAAL,EAIA,GAAIS,CAAAA,MAAM,CAAG,KAAKL,OAAlB,CAGIK,MAPJ,GAQET,YAAY,CAACU,GAAb,CAAiBD,MAAjB,CARF,CASEA,MAAM,CAAG,IATX,EAYIF,GAZJ,GAcEE,MAAM,CAAG,CACPE,KAAK,CAAE,KAAKC,SAAL,CAAeN,IAAf,CAAoB,IAApB,CADA,CAEPO,QAAQ,CAAE,KAAKC,OAAL,CAAaR,IAAb,CAAkB,IAAlB,CAFH,CAGPS,KAAK,CAAE,KAAKC,QAAL,CAAcV,IAAd,CAAmB,IAAnB,CAHA,CAIPW,QAAQ,CAAE,KAAKC,cAAL,CAAoBZ,IAApB,CAAyB,IAAzB,CAJH,CAdX,CAqBEN,YAAY,CAACmB,EAAb,CAAgBV,MAAhB,CAAwBF,GAAxB,CArBF,EAwBA,KAAKH,OAAL,CAAeK,MAxBf,CAyBD,C,4CAESW,G,CAAK,CACT,KAAKjB,KAAL,CAAWb,aADF,EAEX8B,GAAG,CAACC,eAAJ,EAEH,C,wCAEOD,G,CAAK,CACP,KAAKjB,KAAL,CAAWX,WADJ,EAET4B,GAAG,CAACC,eAAJ,EAEH,C,0CAEQD,G,CAAK,CACR,KAAKjB,KAAL,CAAWV,YADH,EAEV2B,GAAG,CAACC,eAAJ,EAEH,C,sDAEcD,G,CAAK,CACd,KAAKjB,KAAL,CAAWT,kBADG,EAEhB0B,GAAG,CAACC,eAAJ,EAEH,C,uCAEQ,CACP,MAAO,KACR,C,iBAnEsCnC,S,SAApBgB,W,aAuErBA,WAAW,CAACb,SAAZ,CAAwBA,S,CACxBa,WAAW,CAACP,YAAZ,CAA2BA,Y,CAC3BO,WAAW,CAACN,YAAZ,CAA2BA,Y","sourcesContent":["// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport WebMercatorViewport from 'viewport-mercator-project';\n\nconst propTypes = {\n  /** Event handling */\n  captureScroll: PropTypes.bool,\n  // Stop map pan & rotate\n  captureDrag: PropTypes.bool,\n  // Stop map click\n  captureClick: PropTypes.bool,\n  // Stop map double click\n  captureDoubleClick: PropTypes.bool\n};\n\nconst defaultProps = {\n  captureScroll: false,\n  captureDrag: true,\n  captureClick: true,\n  captureDoubleClick: true\n};\n\nconst contextTypes = {\n  viewport: PropTypes.instanceOf(WebMercatorViewport),\n  isDragging: PropTypes.bool,\n  eventManager: PropTypes.object\n};\n\n/*\n * PureComponent doesn't update when context changes.\n * The only way is to implement our own shouldComponentUpdate here. Considering\n * the parent component (StaticMap or InteractiveMap) is pure, and map re-render\n * is almost always triggered by a viewport change, we almost definitely need to\n * recalculate the marker's position when the parent re-renders.\n */\nexport default class BaseControl extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this._events = null;\n\n    this._onContainerLoad = this._onContainerLoad.bind(this);\n  }\n\n  _onContainerLoad(ref) {\n    const {eventManager} = this.context;\n\n    // Return early if no eventManager is found\n    if (!eventManager) {\n      return;\n    }\n\n    let events = this._events;\n\n    // Remove all previously registered events\n    if (events) {\n      eventManager.off(events);\n      events = null;\n    }\n\n    if (ref) {\n      // container is mounted: register events for this element\n      events = {\n        wheel: this._onScroll.bind(this),\n        panstart: this._onDrag.bind(this),\n        click: this._onClick.bind(this),\n        dblclick: this._onDoubleClick.bind(this)\n      };\n\n      eventManager.on(events, ref);\n    }\n\n    this._events = events;\n  }\n\n  _onScroll(evt) {\n    if (this.props.captureScroll) {\n      evt.stopPropagation();\n    }\n  }\n\n  _onDrag(evt) {\n    if (this.props.captureDrag) {\n      evt.stopPropagation();\n    }\n  }\n\n  _onClick(evt) {\n    if (this.props.captureClick) {\n      evt.stopPropagation();\n    }\n  }\n\n  _onDoubleClick(evt) {\n    if (this.props.captureDoubleClick) {\n      evt.stopPropagation();\n    }\n  }\n\n  render() {\n    return null;\n  }\n\n}\n\nBaseControl.propTypes = propTypes;\nBaseControl.defaultProps = defaultProps;\nBaseControl.contextTypes = contextTypes;\n"],"file":"base-control.js"}
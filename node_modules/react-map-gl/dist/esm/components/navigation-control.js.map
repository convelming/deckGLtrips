{"version":3,"sources":["../../../src/components/navigation-control.js"],"names":["createElement","PropTypes","BaseControl","MapState","TransitionManager","deprecateWarn","LINEAR_TRANSITION_PROPS","Object","assign","defaultProps","transitionDuration","propTypes","className","string","onViewStateChange","func","onViewportChange","showCompass","bool","showZoom","NavigationControl","props","_updateViewport","bind","_onZoomIn","_onZoomOut","_onResetNorth","_renderCompass","_renderButton","nextProps","nextState","nextContext","context","viewport","bearing","opts","mapState","viewState","getViewportProps","onChangeViewport","zoom","pitch","style","transform","type","label","callback","children","key","title","onClick","ref","_onContainerLoad","displayName"],"mappings":"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","sourcesContent":["import {createElement} from 'react';\nimport PropTypes from 'prop-types';\nimport BaseControl from './base-control';\n\nimport MapState from '../utils/map-state';\nimport TransitionManager from '../utils/transition-manager';\n\nimport deprecateWarn from '../utils/deprecate-warn';\n\nconst LINEAR_TRANSITION_PROPS = Object.assign({}, TransitionManager.defaultProps, {\n  transitionDuration: 300\n});\n\nconst propTypes = Object.assign({}, BaseControl.propTypes, {\n  // Custom className\n  className: PropTypes.string,\n  // Callbacks fired when the user interacted with the map. The object passed to the callbacks\n  // contains viewport properties such as `longitude`, `latitude`, `zoom` etc.\n  onViewStateChange: PropTypes.func,\n  onViewportChange: PropTypes.func,\n  // Show/hide compass button\n  showCompass: PropTypes.bool,\n  // Show/hide zoom buttons\n  showZoom: PropTypes.bool\n});\n\nconst defaultProps = Object.assign({}, BaseControl.defaultProps, {\n  className: '',\n  onViewStateChange: () => {},\n  onViewportChange: () => {},\n  showCompass: true,\n  showZoom: true\n});\n\n/*\n * PureComponent doesn't update when context changes, so\n * implementing our own shouldComponentUpdate here.\n */\nexport default class NavigationControl extends BaseControl {\n\n  constructor(props) {\n    super(props);\n    // Check for deprecated props\n    deprecateWarn(props);\n\n    this._updateViewport = this._updateViewport.bind(this);\n    this._onZoomIn = this._onZoomIn.bind(this);\n    this._onZoomOut = this._onZoomOut.bind(this);\n    this._onResetNorth = this._onResetNorth.bind(this);\n    this._renderCompass = this._renderCompass.bind(this);\n    this._renderButton = this._renderButton.bind(this);\n  }\n\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\n    return this.context.viewport.bearing !== nextContext.viewport.bearing;\n  }\n\n  _updateViewport(opts) {\n    const {viewport} = this.context;\n    const mapState = new MapState(Object.assign({}, viewport, opts));\n    const viewState = Object.assign({}, mapState.getViewportProps(), LINEAR_TRANSITION_PROPS);\n\n    // Call new style callback\n    this.props.onViewStateChange({viewState});\n\n    // Call old style callback\n    // TODO(deprecate): remove this check when `onChangeViewport` gets deprecated\n    const onViewportChange = this.props.onChangeViewport || this.props.onViewportChange;\n    onViewportChange(viewState);\n  }\n\n  _onZoomIn() {\n    this._updateViewport({zoom: this.context.viewport.zoom + 1});\n  }\n\n  _onZoomOut() {\n    this._updateViewport({zoom: this.context.viewport.zoom - 1});\n  }\n\n  _onResetNorth() {\n    this._updateViewport({bearing: 0, pitch: 0});\n  }\n\n  _renderCompass() {\n    const {bearing} = this.context.viewport;\n    return createElement('span', {\n      className: 'mapboxgl-ctrl-compass-arrow',\n      style: {transform: `rotate(${bearing}deg)`}\n    });\n  }\n\n  _renderButton(type, label, callback, children) {\n    return createElement('button', {\n      key: type,\n      className: `mapboxgl-ctrl-icon mapboxgl-ctrl-${type}`,\n      type: 'button',\n      title: label,\n      onClick: callback,\n      children\n    });\n  }\n\n  render() {\n\n    const {className, showCompass, showZoom} = this.props;\n\n    return createElement('div', {\n      className: `mapboxgl-ctrl mapboxgl-ctrl-group ${className}`,\n      ref: this._onContainerLoad\n    }, [\n      showZoom && this._renderButton('zoom-in', 'Zoom In', this._onZoomIn),\n      showZoom && this._renderButton('zoom-out', 'Zoom Out', this._onZoomOut),\n      showCompass &&\n        this._renderButton('compass', 'Reset North', this._onResetNorth, this._renderCompass())\n    ]);\n  }\n}\n\nNavigationControl.displayName = 'NavigationControl';\nNavigationControl.propTypes = propTypes;\nNavigationControl.defaultProps = defaultProps;\n"],"file":"navigation-control.js"}
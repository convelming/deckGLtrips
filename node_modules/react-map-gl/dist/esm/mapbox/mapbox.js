function _instanceof(left,right){return null!=right&&"undefined"!=typeof Symbol&&right[Symbol.hasInstance]?right[Symbol.hasInstance](left):left instanceof right}function _classCallCheck(instance,Constructor){if(!_instanceof(instance,Constructor))throw new TypeError("Cannot call a class as a function")}function _defineProperties(target,props){for(var descriptor,i=0;i<props.length;i++)descriptor=props[i],descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Constructor}import PropTypes from"prop-types";function noop(){}var propTypes={container:PropTypes.object,mapboxApiAccessToken:PropTypes.string,attributionControl:PropTypes.bool,preserveDrawingBuffer:PropTypes.bool,onLoad:PropTypes.func,onError:PropTypes.func,reuseMaps:PropTypes.bool,reuseMap:PropTypes.bool,transformRequest:PropTypes.func,mapStyle:PropTypes.string,visible:PropTypes.bool,width:PropTypes.number,height:PropTypes.number,viewState:PropTypes.object,longitude:PropTypes.number,latitude:PropTypes.number,zoom:PropTypes.number,bearing:PropTypes.number,pitch:PropTypes.number,altitude:PropTypes.number,mapOptions:PropTypes.object},defaultProps={mapboxApiAccessToken:getAccessToken(),preserveDrawingBuffer:!1,attributionControl:!0,preventStyleDiffing:!1,onLoad:noop,onError:noop,reuseMaps:!1,reuseMap:!1,transformRequest:null,mapStyle:"mapbox://styles/mapbox/light-v8",visible:!0,bearing:0,pitch:0,altitude:1.5,width:0,height:0,mapOptions:{}};export function getAccessToken(){var accessToken=null;if("undefined"!=typeof window&&window.location){var match=window.location.search.match(/access_token=([^&\/]*)/);accessToken=match&&match[1]}return accessToken||"undefined"==typeof process||(accessToken=accessToken||process.env.MapboxAccessToken||process.env.REACT_APP_MAPBOX_ACCESS_TOKEN),accessToken||null}function checkPropTypes(props){var component=1<arguments.length&&arguments[1]!==void 0?arguments[1]:"component";props.debug&&PropTypes.checkPropTypes(propTypes,props,"prop",component)}var Mapbox=function(){function Mapbox(props){if(_classCallCheck(this,Mapbox),!props.mapboxgl)throw new Error("Mapbox not available");if(!Mapbox.initialized&&console.debug){Mapbox.initialized=!0;"3.3.8";console.debug("react-map-gl: ".concat("3.3.8"," using mapbox-gl v").concat(props.mapboxgl.version)),this._checkStyleSheet(props.mapboxgl.version)}this.props={},this._initialize(props)}return _createClass(Mapbox,[{key:"finalize",value:function finalize(){return this._destroy(),this}},{key:"setProps",value:function setProps(props){return this._update(this.props,props),this}},{key:"resize",value:function resize(){return this._map.resize(),this}},{key:"getMap",value:function getMap(){return this._map}},{key:"_create",value:function _create(props){if((props.reuseMaps||props.reuseMap)&&Mapbox.savedMap){this._map=this.map=Mapbox.savedMap;var oldContainer=this._map.getContainer(),newContainer=props.container;for(newContainer.classList.add("mapboxgl-map");0<oldContainer.childNodes.length;)newContainer.appendChild(oldContainer.childNodes[0]);this._map._container=newContainer,Mapbox.savedMap=null,props.mapStyle&&this._map.setStyle(props.mapStyle),props.onLoad()}else{var mapOptions={container:props.container||document.body,center:[0,0],zoom:8,pitch:0,bearing:0,style:props.mapStyle,interactive:!1,attributionControl:props.attributionControl,preserveDrawingBuffer:props.preserveDrawingBuffer};props.transformRequest&&(mapOptions.transformRequest=props.transformRequest),this._map=this.map=new props.mapboxgl.Map(Object.assign({},mapOptions,props.mapOptions)),this.map.once("load",props.onLoad),this.map.on("error",props.onError)}return this}},{key:"_destroy",value:function _destroy(){this._map&&(Mapbox.savedMap?this._map.remove():Mapbox.savedMap=this._map,this._map=null)}},{key:"_initialize",value:function _initialize(props){props=Object.assign({},defaultProps,props),checkPropTypes(props,"Mapbox"),this.accessToken=props.mapboxApiAccessToken||defaultProps.mapboxApiAccessToken,props.mapboxgl&&(this.accessToken?props.mapboxgl.accessToken=this.accessToken:props.mapboxgl.accessToken="no-token"),this._create(props);var canvas=this.map.getCanvas();canvas&&(canvas.style.outline="none"),this._updateMapViewport({},props),this._updateMapSize({},props),this.props=props}},{key:"_update",value:function _update(oldProps,newProps){this._map&&(newProps=Object.assign({},this.props,newProps),checkPropTypes(newProps,"Mapbox"),this._updateMapViewport(oldProps,newProps),this._updateMapSize(oldProps,newProps),this.props=newProps)}},{key:"_updateMapSize",value:function _updateMapSize(oldProps,newProps){var sizeChanged=oldProps.width!==newProps.width||oldProps.height!==newProps.height;sizeChanged&&this._map.resize()}},{key:"_updateMapViewport",value:function _updateMapViewport(oldProps,newProps){var oldViewState=this._getViewState(oldProps),newViewState=this._getViewState(newProps),viewportChanged=newViewState.latitude!==oldViewState.latitude||newViewState.longitude!==oldViewState.longitude||newViewState.zoom!==oldViewState.zoom||newViewState.pitch!==oldViewState.pitch||newViewState.bearing!==oldViewState.bearing||newViewState.altitude!==oldViewState.altitude;viewportChanged&&(this._map.jumpTo(this._getMapboxViewStateProps(newProps)),newViewState.altitude!==oldViewState.altitude&&(this._map.transform.altitude=newViewState.altitude))}},{key:"_getViewState",value:function _getViewState(props){var _ref=props.viewState||props,longitude=_ref.longitude,latitude=_ref.latitude,zoom=_ref.zoom,_ref$pitch=_ref.pitch,pitch=void 0===_ref$pitch?0:_ref$pitch,_ref$bearing=_ref.bearing,bearing=void 0===_ref$bearing?0:_ref$bearing,_ref$altitude=_ref.altitude,altitude=void 0===_ref$altitude?1.5:_ref$altitude;return{longitude:longitude,latitude:latitude,zoom:zoom,pitch:pitch,bearing:bearing,altitude:altitude}}},{key:"_checkStyleSheet",value:function _checkStyleSheet(){var mapboxVersion=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"0.47.0";if("undefined"!=typeof document)try{var testElement=document.createElement("div");testElement.className="mapboxgl-map",testElement.style.display="none",document.body.append(testElement);var isCssLoaded="static"!==window.getComputedStyle(testElement).position;if(!isCssLoaded){var link=document.createElement("link");link.setAttribute("rel","stylesheet"),link.setAttribute("type","text/css"),link.setAttribute("href","https://api.tiles.mapbox.com/mapbox-gl-js/v".concat(mapboxVersion,"/mapbox-gl.css")),document.head.append(link)}}catch(error){}}},{key:"_getMapboxViewStateProps",value:function _getMapboxViewStateProps(props){var viewState=this._getViewState(props);return{center:[viewState.longitude,viewState.latitude],zoom:viewState.zoom,bearing:viewState.bearing,pitch:viewState.pitch,width:props.width,height:props.height}}}]),Mapbox}();export{Mapbox as default};Mapbox.propTypes=propTypes,Mapbox.defaultProps=defaultProps;
//# sourceMappingURL=mapbox.js.map
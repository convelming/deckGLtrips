{"version":3,"sources":["../../../../src/utils/transition/linear-interpolator.js"],"names":["WebMercatorViewport","assert","TransitionInterpolator","isValid","lerp","getEndValueByShortestPath","VIEWPORT_TRANSITION_PROPS","LinearInterpolator","opts","Array","isArray","transitionProps","propNames","around","startProps","endProps","startViewportProps","endViewportProps","Object","assign","aroundLngLat","unproject","key","startValue","endValue","start","end","t","viewport","getMapCenterByLngLatPosition","lngLat","pos","longitude","latitude"],"mappings":"i2EAAA,MAAOA,CAAAA,mBAAP,KAAgC,2BAAhC,CAEA,MAAOC,CAAAA,MAAP,KAAmB,WAAnB,CACA,MAAOC,CAAAA,sBAAP,KAAmC,2BAAnC,CAEA,OAAQC,OAAR,CAAiBC,IAAjB,CAAuBC,yBAAvB,KAAuD,oBAAvD,C,GAEMC,CAAAA,yBAAyB,CAAG,CAAC,WAAD,CAAc,UAAd,CAA0B,MAA1B,CAAkC,SAAlC,CAA6C,OAA7C,C,CAKbC,kB,iCAOnB,6BAAuB,WAAXC,IAAW,wDAAJ,EAAI,6KAGjBC,KAAK,CAACC,OAAN,CAAcF,IAAd,CAHiB,GAKnBA,IAAI,CAAG,CAACG,eAAe,CAAEH,IAAlB,CALY,EAQrB,MAAKI,SAAL,CAAiBJ,IAAI,CAACG,eAAL,EAAwBL,yBARpB,CASrB,MAAKO,MAAL,CAAcL,IAAI,CAACK,MATE,MAUtB,C,kJAEeC,U,CAAYC,Q,CAAU,IAC9BC,CAAAA,kBAAkB,CAAG,EADS,CAE9BC,gBAAgB,CAAG,EAFW,CAIhC,KAAKJ,MAJ2B,EAKlCK,MAAM,CAACC,MAAP,CAAcF,gBAAd,CAAgCF,QAAhC,CAA0C,CACxCF,MAAM,CAAE,KAAKA,MAD2B,CAExCO,YAAY,CAAE,GAAIpB,CAAAA,mBAAJ,CAAwBe,QAAxB,EAAkCM,SAAlC,CAA4C,KAAKR,MAAjD,CAF0B,CAA1C,CALkC,iFAWpC,wBAAkB,KAAKD,SAAvB,4GAAkC,IAAvBU,CAAAA,GAAuB,aAC1BC,UAAU,CAAGT,UAAU,CAACQ,GAAD,CADG,CAE1BE,QAAQ,CAAGT,QAAQ,CAACO,GAAD,CAFO,CAGhCrB,MAAM,CAACE,OAAO,CAACoB,UAAD,CAAP,EAAuBpB,OAAO,CAACqB,QAAD,CAA/B,WAA8CF,GAA9C,qCAH0B,CAKhCN,kBAAkB,CAACM,GAAD,CAAlB,CAA0BC,UALM,CAMhCN,gBAAgB,CAACK,GAAD,CAAhB,CAAwBjB,yBAAyB,CAACiB,GAAD,CAAMC,UAAN,CAAkBC,QAAlB,CAClD,CAlBmC,yLAoBpC,MAAO,CACLC,KAAK,CAAET,kBADF,CAELU,GAAG,CAAET,gBAFA,CAIR,C,0DAEgBH,U,CAAYC,Q,CAAUY,C,CAAG,IAClCC,CAAAA,QAAQ,CAAG,EADuB,gFAExC,eAAWN,GAAX,YAAkB,KAAKV,SAAvB,gHAAWU,GAAX,cACEM,QAAQ,CAACN,GAAD,CAAR,CAAgBlB,IAAI,CAACU,UAAU,CAACQ,GAAD,CAAX,CAAkBP,QAAQ,CAACO,GAAD,CAA1B,CAAiCK,CAAjC,CAHkB,gMAMxC,GAAIZ,QAAQ,CAACF,MAAb,CAAqB,2BAEW,GAAIb,CAAAA,mBAAJ,CAAwBkB,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkBJ,QAAlB,CAA4Ba,QAA5B,CAAxB,EAC3BC,4BAD2B,CACE,CAC5BC,MAAM,CAAEf,QAAQ,CAACK,YADW,CAE5BW,GAAG,CAAEhB,QAAQ,CAACF,MAFc,CADF,CAFX,gEAEZmB,SAFY,2BAEDC,QAFC,2BAOnBL,QAAQ,CAACI,SAAT,CAAqBA,SAPF,CAQnBJ,QAAQ,CAACK,QAAT,CAAoBA,QACrB,CAED,MAAOL,CAAAA,QACR,C,wBA/D6C1B,sB,SAA3BK,kB","sourcesContent":["import WebMercatorViewport from 'viewport-mercator-project';\n\nimport assert from '../assert';\nimport TransitionInterpolator from './transition-interpolator';\n\nimport {isValid, lerp, getEndValueByShortestPath} from './transition-utils';\n\nconst VIEWPORT_TRANSITION_PROPS = ['longitude', 'latitude', 'zoom', 'bearing', 'pitch'];\n\n/**\n * Performs linear interpolation of two viewports.\n*/\nexport default class LinearInterpolator extends TransitionInterpolator {\n\n  /**\n   * @param opts {Object}\n   *  - opts.transitionProps {Array}] - list of props to apply linear transition to.\n   *  - opts.around {Array} - a screen point to zoom/rotate around\n   */\n  constructor(opts = {}) {\n    super();\n\n    if (Array.isArray(opts)) {\n      // backward compatibility\n      opts = {transitionProps: opts};\n    }\n\n    this.propNames = opts.transitionProps || VIEWPORT_TRANSITION_PROPS;\n    this.around = opts.around;\n  }\n\n  initializeProps(startProps, endProps) {\n    const startViewportProps = {};\n    const endViewportProps = {};\n\n    if (this.around) {\n      Object.assign(endViewportProps, endProps, {\n        around: this.around,\n        aroundLngLat: new WebMercatorViewport(endProps).unproject(this.around)\n      });\n    }\n\n    for (const key of this.propNames) {\n      const startValue = startProps[key];\n      const endValue = endProps[key];\n      assert(isValid(startValue) && isValid(endValue), `${key} must be supplied for transition`);\n\n      startViewportProps[key] = startValue;\n      endViewportProps[key] = getEndValueByShortestPath(key, startValue, endValue);\n    }\n\n    return {\n      start: startViewportProps,\n      end: endViewportProps\n    };\n  }\n\n  interpolateProps(startProps, endProps, t) {\n    const viewport = {};\n    for (const key of this.propNames) {\n      viewport[key] = lerp(startProps[key], endProps[key], t);\n    }\n\n    if (endProps.around) {\n      // zoom around provided point\n      const [longitude, latitude] = new WebMercatorViewport(Object.assign({}, endProps, viewport))\n        .getMapCenterByLngLatPosition({\n          lngLat: endProps.aroundLngLat,\n          pos: endProps.around\n        });\n      viewport.longitude = longitude;\n      viewport.latitude = latitude;\n    }\n\n    return viewport;\n  }\n\n}\n"],"file":"linear-interpolator.js"}
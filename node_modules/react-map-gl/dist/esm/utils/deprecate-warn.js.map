{"version":3,"sources":["../../../src/utils/deprecate-warn.js"],"names":["DEPRECATED_PROPS","old","new","getDeprecatedText","name","getNewText","checkDeprecatedProps","props","forEach","depProp","hasOwnProperty","warnMessage","console","warn"],"mappings":"AACA,GAAMA,CAAAA,gBAAgB,CAAG,CACvB,CAACC,GAAG,CAAE,kBAAN,CAA0BC,GAAG,CAAE,kBAA/B,CADuB,CAEvB,CAACD,GAAG,CAAE,oBAAN,CAA4BC,GAAG,CAAE,YAAjC,CAFuB,CAGvB,CAACD,GAAG,CAAE,iBAAN,CAAyBC,GAAG,CAAE,SAA9B,CAHuB,CAIvB,CAACD,GAAG,CAAE,iBAAN,CAAyBC,GAAG,CAAE,SAA9B,CAJuB,CAKvB,CAACD,GAAG,CAAE,iBAAN,CAAyBC,GAAG,CAAE,wBAA9B,CALuB,CAAzB,CAQA,QAASC,CAAAA,iBAAT,CAA2BC,IAA3B,CAAiC,CAC/B,+BAA0BA,IAA1B,2DACD,CAED,QAASC,CAAAA,UAAT,CAAoBD,IAApB,CAA0B,CACxB,qBAAgBA,IAAhB,cACD,CAOD,cAAe,SAASE,CAAAA,oBAAT,EAA0C,IAAZC,CAAAA,KAAY,wDAAJ,EAAI,CAEvDP,gBAAgB,CAACQ,OAAjB,CAAyB,SAACC,OAAD,CAAa,CACpC,GAAIF,KAAK,CAACG,cAAN,CAAqBD,OAAO,CAACR,GAA7B,CAAJ,CAAuC,CACrC,GAAIU,CAAAA,WAAW,CAAGR,iBAAiB,CAACM,OAAO,CAACR,GAAT,CAAnC,CACIQ,OAAO,CAACP,GAFyB,GAGnCS,WAAW,WAAMA,WAAN,aAAqBN,UAAU,CAACI,OAAO,CAACP,GAAT,CAA/B,CAHwB,EAKrCU,OAAO,CAACC,IAAR,CAAaF,WAAb,CACD,CACF,CARD,CASD","sourcesContent":["// 'new' is optional\nconst DEPRECATED_PROPS = [\n  {old: 'onChangeViewport', new: 'onViewportChange'},\n  {old: 'perspectiveEnabled', new: 'dragRotate'},\n  {old: 'onHoverFeatures', new: 'onHover'},\n  {old: 'onClickFeatures', new: 'onClick'},\n  {old: 'touchZoomRotate', new: 'touchZoom, touchRotate'}\n];\n\nfunction getDeprecatedText(name) {\n  return `react-map-gl: \\`${name}\\` is deprecated and will be removed in a later version.`;\n}\n\nfunction getNewText(name) {\n  return `Use \\`${name}\\` instead.`;\n}\n\n/**\n * Checks props object for any prop that is deprecated and insert a console\n * warning to the user. This will also print out the recommended new prop/API\n * if one exists.\n */\nexport default function checkDeprecatedProps(props = {}) {\n  /* eslint-disable no-console, no-undef */\n  DEPRECATED_PROPS.forEach((depProp) => {\n    if (props.hasOwnProperty(depProp.old)) {\n      let warnMessage = getDeprecatedText(depProp.old);\n      if (depProp.new) {\n        warnMessage = `${warnMessage} ${getNewText(depProp.new)}`;\n      }\n      console.warn(warnMessage);\n    }\n  });\n}\n"],"file":"deprecate-warn.js"}
{"version":3,"sources":["../../../src/utils/map-controls.js"],"names":["MapState","LinearInterpolator","TRANSITION_EVENTS","NO_TRANSITION_PROPS","transitionDuration","LINEAR_TRANSITION_PROPS","transitionEasing","t","transitionInterpolator","transitionInterruption","BREAK","PITCH_MOUSE_THRESHOLD","PITCH_ACCEL","ZOOM_ACCEL","EVENT_TYPES","WHEEL","PAN","PINCH","DOUBLE_TAP","KEYBOARD","MapControls","_state","isDragging","events","handleEvent","bind","Math","abs","event","mapState","getMapState","type","_onPanStart","_onPan","_onPanEnd","_onPinchStart","_onPinch","_onPinchEnd","_onDoubleTap","_onWheel","_onKeyDown","offsetCenter","x","y","srcEvent","metaKey","altKey","ctrlKey","shiftKey","newState","Object","assign","onStateChange","newMapState","extraProps","extraState","oldViewport","getViewportProps","newViewport","viewStateChanged","keys","some","key","onViewStateChange","viewState","onViewportChange","setState","getInteractiveState","overrides","mapStateProps","options","onChangeViewport","touchZoomRotate","eventManager","scrollZoom","dragPan","dragRotate","doubleClickZoom","touchZoom","touchRotate","keyboard","height","updateViewport","_events","toggleEvents","isInteractive","eventNames","enabled","forEach","eventName","on","off","pos","getCenter","panStart","rotateStart","isFunctionKeyPressed","rightButton","_onPanRotate","_onPanMove","panEnd","rotateEnd","pan","deltaX","deltaY","centerY","startY","width","deltaScaleY","min","max","rotate","deltaScaleX","preventDefault","delta","scale","exp","zoom","zoomStart","startPinchRotation","rotation","zoomEnd","isZoomOut","around","funcKey","keyCode","bearing","startPos","pitch"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport MapState from './map-state';\nimport {LinearInterpolator} from './transition';\nimport {TRANSITION_EVENTS} from './transition-manager';\n\nconst NO_TRANSITION_PROPS = {\n  transitionDuration: 0\n};\nconst LINEAR_TRANSITION_PROPS = {\n  transitionDuration: 300,\n  transitionEasing: t => t,\n  transitionInterpolator: new LinearInterpolator(),\n  transitionInterruption: TRANSITION_EVENTS.BREAK\n};\n\n// EVENT HANDLING PARAMETERS\nconst PITCH_MOUSE_THRESHOLD = 5;\nconst PITCH_ACCEL = 1.2;\nconst ZOOM_ACCEL = 0.01;\n\nconst EVENT_TYPES = {\n  WHEEL: ['wheel'],\n  PAN: ['panstart', 'panmove', 'panend'],\n  PINCH: ['pinchstart', 'pinchmove', 'pinchend'],\n  DOUBLE_TAP: ['doubletap'],\n  KEYBOARD: ['keydown']\n};\n\nexport default class MapControls {\n  /**\n   * @classdesc\n   * A class that handles events and updates mercator style viewport parameters\n   */\n  constructor() {\n    this._state = {\n      isDragging: false\n    };\n    this.events = [];\n    this.handleEvent = this.handleEvent.bind(this);\n  }\n\n  /**\n   * Callback for events\n   * @param {hammer.Event} event\n   */\n  handleEvent(event) {\n    this.mapState = this.getMapState();\n\n    switch (event.type) {\n    case 'panstart':\n      return this._onPanStart(event);\n    case 'panmove':\n      return this._onPan(event);\n    case 'panend':\n      return this._onPanEnd(event);\n    case 'pinchstart':\n      return this._onPinchStart(event);\n    case 'pinchmove':\n      return this._onPinch(event);\n    case 'pinchend':\n      return this._onPinchEnd(event);\n    case 'doubletap':\n      return this._onDoubleTap(event);\n    case 'wheel':\n      return this._onWheel(event);\n    case 'keydown':\n      return this._onKeyDown(event);\n    default:\n      return false;\n    }\n  }\n\n  /* Event utils */\n  // Event object: http://hammerjs.github.io/api/#event-object\n  getCenter(event) {\n    const {offsetCenter: {x, y}} = event;\n    return [x, y];\n  }\n\n  isFunctionKeyPressed(event) {\n    const {srcEvent} = event;\n    return Boolean(srcEvent.metaKey || srcEvent.altKey ||\n      srcEvent.ctrlKey || srcEvent.shiftKey);\n  }\n\n  setState(newState) {\n    Object.assign(this._state, newState);\n    if (this.onStateChange) {\n      this.onStateChange(this._state);\n    }\n  }\n\n  /* Callback util */\n  // formats map state and invokes callback function\n  updateViewport(newMapState, extraProps = {}, extraState = {}) {\n    const oldViewport = this.mapState ? this.mapState.getViewportProps() : {};\n    const newViewport = Object.assign({}, newMapState.getViewportProps(), extraProps);\n\n    const viewStateChanged =\n      Object.keys(newViewport).some(key => oldViewport[key] !== newViewport[key]);\n\n    // viewState has changed\n    if (viewStateChanged && this.onViewStateChange) {\n      this.onViewStateChange({viewState: newViewport});\n    }\n\n    // viewport has changed\n    if (viewStateChanged && this.onViewportChange) {\n      this.onViewportChange(newViewport);\n    }\n\n    this.setState(Object.assign({}, newMapState.getInteractiveState(), extraState));\n  }\n\n  getMapState(overrides) {\n    return new MapState(Object.assign({}, this.mapStateProps, this._state, overrides));\n  }\n\n  /**\n   * Extract interactivity options\n   */\n  setOptions(options) {\n    const {\n      // TODO(deprecate): remove this when `onChangeViewport` gets deprecated\n      onChangeViewport,\n      // TODO(deprecate): remove this when `touchZoomRotate` gets deprecated\n      touchZoomRotate = true,\n\n      onViewStateChange,\n      onViewportChange,\n      onStateChange = this.onStateChange,\n      eventManager = this.eventManager,\n      scrollZoom = true,\n      dragPan = true,\n      dragRotate = true,\n      doubleClickZoom = true,\n      touchZoom = true,\n      touchRotate = false,\n      keyboard = true\n    } = options;\n\n    this.onViewStateChange = onViewStateChange;\n    // TODO(deprecate): remove this check when `onChangeViewport` gets deprecated\n    this.onViewportChange = onViewportChange || onChangeViewport;\n    this.onStateChange = onStateChange;\n\n    if (this.mapStateProps && this.mapStateProps.height !== options.height) {\n      // Dimensions changed, normalize the props\n      this.updateViewport(new MapState(options));\n    }\n\n    this.mapStateProps = options;\n    if (this.eventManager !== eventManager) {\n      // EventManager has changed\n      this.eventManager = eventManager;\n      this._events = {};\n      this.toggleEvents(this.events, true);\n    }\n    const isInteractive = Boolean(this.onViewStateChange || this.onViewportChange);\n\n    // Register/unregister events\n    this.toggleEvents(EVENT_TYPES.WHEEL, isInteractive && scrollZoom);\n    this.toggleEvents(EVENT_TYPES.PAN, isInteractive && (dragPan || dragRotate));\n    this.toggleEvents(EVENT_TYPES.PINCH, isInteractive && touchZoomRotate);\n    this.toggleEvents(EVENT_TYPES.DOUBLE_TAP, isInteractive && doubleClickZoom);\n    this.toggleEvents(EVENT_TYPES.KEYBOARD, isInteractive && keyboard);\n\n    // Interaction toggles\n    this.scrollZoom = scrollZoom;\n    this.dragPan = dragPan;\n    this.dragRotate = dragRotate;\n    this.doubleClickZoom = doubleClickZoom;\n    this.touchZoom = touchZoomRotate && touchZoom;\n    this.touchRotate = touchZoomRotate && touchRotate;\n    this.keyboard = keyboard;\n  }\n\n  toggleEvents(eventNames, enabled) {\n    if (this.eventManager) {\n      eventNames.forEach(eventName => {\n        if (this._events[eventName] !== enabled) {\n          this._events[eventName] = enabled;\n          if (enabled) {\n            this.eventManager.on(eventName, this.handleEvent);\n          } else {\n            this.eventManager.off(eventName, this.handleEvent);\n          }\n        }\n      });\n    }\n  }\n\n  /* Event handlers */\n  // Default handler for the `panstart` event.\n  _onPanStart(event) {\n    const pos = this.getCenter(event);\n    const newMapState = this.mapState.panStart({pos}).rotateStart({pos});\n    return this.updateViewport(newMapState, NO_TRANSITION_PROPS, {isDragging: true});\n  }\n\n  // Default handler for the `panmove` event.\n  _onPan(event) {\n    return this.isFunctionKeyPressed(event) || event.rightButton ?\n      this._onPanRotate(event) : this._onPanMove(event);\n  }\n\n  // Default handler for the `panend` event.\n  _onPanEnd(event) {\n    const newMapState = this.mapState.panEnd().rotateEnd();\n    return this.updateViewport(newMapState, null, {isDragging: false});\n  }\n\n  // Default handler for panning to move.\n  // Called by `_onPan` when panning without function key pressed.\n  _onPanMove(event) {\n    if (!this.dragPan) {\n      return false;\n    }\n    const pos = this.getCenter(event);\n    const newMapState = this.mapState.pan({pos});\n    return this.updateViewport(newMapState, NO_TRANSITION_PROPS, {isDragging: true});\n  }\n\n  // Default handler for panning to rotate.\n  // Called by `_onPan` when panning with function key pressed.\n  _onPanRotate(event) {\n    if (!this.dragRotate) {\n      return false;\n    }\n\n    const {deltaX, deltaY} = event;\n    const [, centerY] = this.getCenter(event);\n    const startY = centerY - deltaY;\n    const {width, height} = this.mapState.getViewportProps();\n\n    const deltaScaleX = deltaX / width;\n    let deltaScaleY = 0;\n\n    if (deltaY > 0) {\n      if (Math.abs(height - startY) > PITCH_MOUSE_THRESHOLD) {\n        // Move from 0 to -1 as we drag upwards\n        deltaScaleY = deltaY / (startY - height) * PITCH_ACCEL;\n      }\n    } else if (deltaY < 0) {\n      if (startY > PITCH_MOUSE_THRESHOLD) {\n        // Move from 0 to 1 as we drag upwards\n        deltaScaleY = 1 - centerY / startY;\n      }\n    }\n    deltaScaleY = Math.min(1, Math.max(-1, deltaScaleY));\n\n    const newMapState = this.mapState.rotate({deltaScaleX, deltaScaleY});\n    return this.updateViewport(newMapState, NO_TRANSITION_PROPS, {isDragging: true});\n  }\n\n  // Default handler for the `wheel` event.\n  _onWheel(event) {\n    if (!this.scrollZoom) {\n      return false;\n    }\n\n    event.srcEvent.preventDefault();\n\n    const pos = this.getCenter(event);\n    const {delta} = event;\n\n    // Map wheel delta to relative scale\n    let scale = 2 / (1 + Math.exp(-Math.abs(delta * ZOOM_ACCEL)));\n    if (delta < 0 && scale !== 0) {\n      scale = 1 / scale;\n    }\n\n    const newMapState = this.mapState.zoom({pos, scale});\n    return this.updateViewport(newMapState, NO_TRANSITION_PROPS);\n  }\n\n  // Default handler for the `pinchstart` event.\n  _onPinchStart(event) {\n    const pos = this.getCenter(event);\n    const newMapState = this.mapState.zoomStart({pos}).rotateStart({pos});\n    // hack - hammer's `rotation` field doesn't seem to produce the correct angle\n    this._state.startPinchRotation = event.rotation;\n    return this.updateViewport(newMapState, NO_TRANSITION_PROPS, {isDragging: true});\n  }\n\n  // Default handler for the `pinch` event.\n  _onPinch(event) {\n    if (!this.touchZoom && !this.touchRotate) {\n      return false;\n    }\n\n    let newMapState = this.mapState;\n    if (this.touchZoom) {\n      const {scale} = event;\n      const pos = this.getCenter(event);\n      newMapState = newMapState.zoom({pos, scale});\n    }\n    if (this.touchRotate) {\n      const {rotation} = event;\n      const {startPinchRotation} = this._state;\n      newMapState = newMapState.rotate({deltaScaleX: -(rotation - startPinchRotation) / 180});\n    }\n\n    return this.updateViewport(newMapState, NO_TRANSITION_PROPS, {isDragging: true});\n  }\n\n  // Default handler for the `pinchend` event.\n  _onPinchEnd(event) {\n    const newMapState = this.mapState.zoomEnd().rotateEnd();\n    this._state.startPinchRotation = 0;\n    return this.updateViewport(newMapState, null, {isDragging: false});\n  }\n\n  // Default handler for the `doubletap` event.\n  _onDoubleTap(event) {\n    if (!this.doubleClickZoom) {\n      return false;\n    }\n    const pos = this.getCenter(event);\n    const isZoomOut = this.isFunctionKeyPressed(event);\n\n    const newMapState = this.mapState.zoom({pos, scale: isZoomOut ? 0.5 : 2});\n    return this.updateViewport(newMapState, Object.assign({}, LINEAR_TRANSITION_PROPS, {\n      transitionInterpolator: new LinearInterpolator({around: pos})\n    }));\n  }\n\n  /* eslint-disable complexity */\n  // Default handler for the `keydown` event\n  _onKeyDown(event) {\n    if (!this.keyboard) {\n      return false;\n    }\n    const funcKey = this.isFunctionKeyPressed(event);\n    const {mapStateProps} = this;\n    let newMapState;\n\n    switch (event.srcEvent.keyCode) {\n    case 189: // -\n      if (funcKey) {\n        newMapState = this.getMapState({zoom: mapStateProps.zoom - 2});\n      } else {\n        newMapState = this.getMapState({zoom: mapStateProps.zoom - 1});\n      }\n      break;\n    case 187: // +\n      if (funcKey) {\n        newMapState = this.getMapState({zoom: mapStateProps.zoom + 2});\n      } else {\n        newMapState = this.getMapState({zoom: mapStateProps.zoom + 1});\n      }\n      break;\n    case 37: // left\n      if (funcKey) {\n        newMapState = this.getMapState({bearing: mapStateProps.bearing - 15});\n      } else {\n        newMapState = this.mapState.pan({pos: [100, 0], startPos: [0, 0]});\n      }\n      break;\n    case 39: // right\n      if (funcKey) {\n        newMapState = this.getMapState({bearing: mapStateProps.bearing + 15});\n      } else {\n        newMapState = this.mapState.pan({pos: [-100, 0], startPos: [0, 0]});\n      }\n      break;\n    case 38: // up\n      if (funcKey) {\n        newMapState = this.getMapState({pitch: mapStateProps.pitch + 10});\n      } else {\n        newMapState = this.mapState.pan({pos: [0, 100], startPos: [0, 0]});\n      }\n      break;\n    case 40: // down\n      if (funcKey) {\n        newMapState = this.getMapState({pitch: mapStateProps.pitch - 10});\n      } else {\n        newMapState = this.mapState.pan({pos: [0, -100], startPos: [0, 0]});\n      }\n      break;\n    default:\n      return false;\n    }\n    return this.updateViewport(newMapState, LINEAR_TRANSITION_PROPS);\n  }\n  /* eslint-enable complexity */\n}\n"],"file":"map-controls.js"}
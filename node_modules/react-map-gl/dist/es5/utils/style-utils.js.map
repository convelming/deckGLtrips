{"version":3,"sources":["../../../src/utils/style-utils.js"],"names":["getInteractiveLayerIds","mapStyle","interactiveLayerIds","has","get","filter","l","map","toJS","Array","isArray","layers","interactive","id","setDiffStyle","prevStyle","nextStyle","prevKeysMap","styleKeysMap","nextKeysMap","style","delete","propsOtherThanLayersOrSourcesDiffer","prevKeysList","Object","keys","nextKeysList","length","some","key","setStyle","sourcesDiff","layersDiff","checkForEqualLayerSourceChanges","exit","applySourceLayerChanges","updateStyleSource","update","newSource","source","type","oldSource","getSource","oldOpts","workerOptions","scale","geojsonVtOptions","extent","maxzoom","undefined","maxZoom","buffer","tolerance","cluster","clusterRadius","superclusterOptions","radius","clusterMaxZoom","setData","data","removeSource","addSource","updates","node","layer","enter","exiting","getLayer","removeLayer","addLayer","before","sourceExit","nextLayers","sourceIds","s","layersNotRemoved","lyr","includes","size","Error","join"],"mappings":"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","sourcesContent":["import isImmutableMap from './is-immutable-map';\nimport diffStyles from './diff-styles';\n\n// TODO - remove in the next major release\n// Mapbox dropped the `interactive` property: https://github.com/mapbox/mapbox-gl-js/issues/1479\nexport function getInteractiveLayerIds(mapStyle) {\n  let interactiveLayerIds = null;\n\n  if (isImmutableMap(mapStyle) && mapStyle.has('layers')) {\n    interactiveLayerIds = mapStyle.get('layers')\n      .filter(l => l.get('interactive'))\n      .map(l => l.get('id'))\n      .toJS();\n  } else if (Array.isArray(mapStyle.layers)) {\n    interactiveLayerIds = mapStyle.layers.filter(l => l.interactive)\n      .map(l => l.id);\n  }\n\n  return interactiveLayerIds;\n}\n\n// Individually update the maps source and layers that have changed if all\n// other style props haven't changed. This prevents flicking of the map when\n// styles only change sources or layers.\n/* eslint-disable max-statements, complexity */\nexport function setDiffStyle(prevStyle, nextStyle, map) {\n  const prevKeysMap = prevStyle && styleKeysMap(prevStyle) || {};\n  const nextKeysMap = styleKeysMap(nextStyle);\n  function styleKeysMap(style) {\n    return style.map(() => true).delete('layers').delete('sources').toJS();\n  }\n  function propsOtherThanLayersOrSourcesDiffer() {\n    const prevKeysList = Object.keys(prevKeysMap);\n    const nextKeysList = Object.keys(nextKeysMap);\n    if (prevKeysList.length !== nextKeysList.length) {\n      return true;\n    }\n    // `nextStyle` and `prevStyle` should not have the same set of props.\n    if (nextKeysList.some(\n      key => prevStyle.get(key) !== nextStyle.get(key)\n      // But the value of one of those props is different.\n    )) {\n      return true;\n    }\n    return false;\n  }\n\n  if (!prevStyle || propsOtherThanLayersOrSourcesDiffer()) {\n    map.setStyle(nextStyle.toJS());\n    return;\n  }\n\n  const {sourcesDiff, layersDiff} = diffStyles(prevStyle, nextStyle);\n  checkForEqualLayerSourceChanges(sourcesDiff.exit, nextStyle.get('layers'));\n  applySourceLayerChanges(map, nextStyle, sourcesDiff, layersDiff);\n}\n\n/* eslint-enable max-statements, complexity */\n\n// Update a source in the map style\nfunction updateStyleSource(map, update) {\n  const newSource = update.source.toJS();\n  if (newSource.type === 'geojson') {\n    const oldSource = map.getSource(update.id);\n    if (oldSource.type === 'geojson') {\n      // update data if no other GeoJSONSource options were changed\n      const oldOpts = oldSource.workerOptions;\n      // GeoJSONSource class scales user options before assigning to workerOptions\n      // https://github.com/mapbox/mapbox-gl-js/blob/master/src/source/geojson_source.js\n      const scale = oldOpts.geojsonVtOptions.extent / 512;\n\n      if (\n        (newSource.maxzoom === undefined ||\n          newSource.maxzoom === oldOpts.geojsonVtOptions.maxZoom) &&\n        (newSource.buffer === undefined ||\n          newSource.buffer === oldOpts.geojsonVtOptions.buffer / scale) &&\n        (newSource.tolerance === undefined ||\n          newSource.tolerance === oldOpts.geojsonVtOptions.tolerance / scale) &&\n        (newSource.cluster === undefined ||\n          newSource.cluster === oldOpts.cluster) &&\n        (newSource.clusterRadius === undefined ||\n          newSource.clusterRadius === oldOpts.superclusterOptions.radius / scale) &&\n        (newSource.clusterMaxZoom === undefined ||\n          newSource.clusterMaxZoom === oldOpts.superclusterOptions.maxZoom)\n      ) {\n        oldSource.setData(newSource.data);\n        return;\n      }\n    }\n  }\n\n  map.removeSource(update.id);\n  map.addSource(update.id, newSource);\n}\n\nfunction applySourceLayerChanges(map, nextStyle, sourcesDiff, layersDiff) {\n// TODO: It's rather difficult to determine style diffing in the presence\n  // of refs. For now, if any style update has a ref, fallback to no diffing.\n  // We can come back to this case if there's a solid usecase.\n  if (layersDiff.updates.some(node => node.layer.get('ref'))) {\n    map.setStyle(nextStyle.toJS());\n    return;\n  }\n\n  for (const enter of sourcesDiff.enter) {\n    map.addSource(enter.id, enter.source.toJS());\n  }\n  for (const update of sourcesDiff.update) {\n    updateStyleSource(map, update);\n  }\n\n  for (const exit of layersDiff.exiting) {\n    if (map.style.getLayer(exit.id)) {\n      map.removeLayer(exit.id);\n    }\n  }\n  for (const update of layersDiff.updates) {\n    if (!update.enter) {\n      // This is an old layer that needs to be updated. Remove the old layer\n      // with the same id and add it back again.\n      map.removeLayer(update.id);\n    }\n    map.addLayer(update.layer.toJS(), update.before);\n  }\n\n  for (const exit of sourcesDiff.exit) {\n    map.removeSource(exit.id);\n  }\n}\n\n/* eslint-disable max-len */\nfunction checkForEqualLayerSourceChanges(sourceExit, nextLayers) {\n  const sourceIds = sourceExit.map(s => s.id);\n  const layersNotRemoved = nextLayers.filter(lyr => sourceIds.includes(lyr.get('source')));\n  if (layersNotRemoved.size) {\n    // because of this, no source/layer changes will take effect if there is an error\n    throw new Error(`You must remove any layers associated with sources you are removing: ${layersNotRemoved.map(l => l.get('id')).toJS().join('')}`);\n  }\n}\n"],"file":"style-utils.js"}
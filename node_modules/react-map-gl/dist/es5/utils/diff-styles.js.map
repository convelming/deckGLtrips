{"version":3,"sources":["../../../src/utils/diff-styles.js"],"names":["diffSources","prevStyle","nextStyle","prevSources","get","nextSources","enter","update","exit","prevIds","keySeq","toArray","nextIds","id","nextSource","equals","push","source","prevSource","diffLayers","prevLayers","nextLayers","updates","exiting","prevMap","nextMap","forEach","layer","index","layerImBehind","before","reverse","diffStyle","sourcesDiff","layersDiff"],"mappings":";;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACO,SAASA,WAAT,CAAqBC,SAArB,EAAgCC,SAAhC,EAA2C;AAChD,MAAMC,WAAW,GAAGF,SAAS,CAACG,GAAV,CAAc,SAAd,CAApB;AACA,MAAMC,WAAW,GAAGH,SAAS,CAACE,GAAV,CAAc,SAAd,CAApB;AACA,MAAME,KAAK,GAAG,EAAd;AACA,MAAMC,MAAM,GAAG,EAAf;AACA,MAAMC,IAAI,GAAG,EAAb;AACA,MAAMC,OAAO,GAAGN,WAAW,CAACO,MAAZ,GAAqBC,OAArB,EAAhB;AACA,MAAMC,OAAO,GAAGP,WAAW,CAACK,MAAZ,GAAqBC,OAArB,EAAhB;AAPgD;AAAA;AAAA;;AAAA;AAQhD,yBAAiBF,OAAjB,8HAA0B;AAAA,UAAfI,EAAe;AACxB,UAAMC,UAAU,GAAGT,WAAW,CAACD,GAAZ,CAAgBS,EAAhB,CAAnB;;AACA,UAAIC,UAAJ,EAAgB;AACd,YAAI,CAACA,UAAU,CAACC,MAAX,CAAkBZ,WAAW,CAACC,GAAZ,CAAgBS,EAAhB,CAAlB,CAAL,EAA6C;AAC3CN,UAAAA,MAAM,CAACS,IAAP,CAAY;AAACH,YAAAA,EAAE,EAAFA,EAAD;AAAKI,YAAAA,MAAM,EAAEZ,WAAW,CAACD,GAAZ,CAAgBS,EAAhB;AAAb,WAAZ;AACD;AACF,OAJD,MAIO;AACLL,QAAAA,IAAI,CAACQ,IAAL,CAAU;AAACH,UAAAA,EAAE,EAAFA,EAAD;AAAKI,UAAAA,MAAM,EAAEd,WAAW,CAACC,GAAZ,CAAgBS,EAAhB;AAAb,SAAV;AACD;AACF;AAjB+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAkBhD,0BAAiBD,OAAjB,mIAA0B;AAAA,UAAfC,GAAe;AACxB,UAAMK,UAAU,GAAGf,WAAW,CAACC,GAAZ,CAAgBS,GAAhB,CAAnB;;AACA,UAAI,CAACK,UAAL,EAAiB;AACfZ,QAAAA,KAAK,CAACU,IAAN,CAAW;AAACH,UAAAA,EAAE,EAAFA,GAAD;AAAKI,UAAAA,MAAM,EAAEZ,WAAW,CAACD,GAAZ,CAAgBS,GAAhB;AAAb,SAAX;AACD;AACF;AAvB+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAwBhD,SAAO;AAACP,IAAAA,KAAK,EAALA,KAAD;AAAQC,IAAAA,MAAM,EAANA,MAAR;AAAgBC,IAAAA,IAAI,EAAJA;AAAhB,GAAP;AACD;AACD;;;AAEO,SAASW,UAAT,CAAoBlB,SAApB,EAA+BC,SAA/B,EAA0C;AAC/C,MAAMkB,UAAU,GAAGnB,SAAS,CAACG,GAAV,CAAc,QAAd,CAAnB;AACA,MAAMiB,UAAU,GAAGnB,SAAS,CAACE,GAAV,CAAc,QAAd,CAAnB;AACA,MAAMkB,OAAO,GAAG,EAAhB;AACA,MAAMC,OAAO,GAAG,EAAhB;AACA,MAAMC,OAAO,GAAG,EAAhB;AACA,MAAMC,OAAO,GAAG,EAAhB;AACAJ,EAAAA,UAAU,CAACK,OAAX,CAAmB,UAACC,KAAD,EAAQC,KAAR,EAAkB;AACnC,QAAMf,EAAE,GAAGc,KAAK,CAACvB,GAAN,CAAU,IAAV,CAAX;AACA,QAAMyB,aAAa,GAAGR,UAAU,CAACjB,GAAX,CAAewB,KAAK,GAAG,CAAvB,CAAtB;AACAH,IAAAA,OAAO,CAACZ,EAAD,CAAP,GAAc;AACZc,MAAAA,KAAK,EAALA,KADY;AAEZd,MAAAA,EAAE,EAAFA,EAFY;AAGZ;AACAiB,MAAAA,MAAM,EAAED,aAAa,GAAGA,aAAa,CAACzB,GAAd,CAAkB,IAAlB,CAAH,GAA6B,IAJtC;AAKZE,MAAAA,KAAK,EAAE;AALK,KAAd;AAOD,GAVD;AAWAc,EAAAA,UAAU,CAACM,OAAX,CAAmB,UAACC,KAAD,EAAQC,KAAR,EAAkB;AACnC,QAAMf,EAAE,GAAGc,KAAK,CAACvB,GAAN,CAAU,IAAV,CAAX;AACA,QAAMyB,aAAa,GAAGT,UAAU,CAAChB,GAAX,CAAewB,KAAK,GAAG,CAAvB,CAAtB;AACAJ,IAAAA,OAAO,CAACX,EAAD,CAAP,GAAc;AACZc,MAAAA,KAAK,EAALA,KADY;AAEZd,MAAAA,EAAE,EAAFA,EAFY;AAGZiB,MAAAA,MAAM,EAAED,aAAa,GAAGA,aAAa,CAACzB,GAAd,CAAkB,IAAlB,CAAH,GAA6B;AAHtC,KAAd;;AAKA,QAAIqB,OAAO,CAACZ,EAAD,CAAX,EAAiB;AACf;AACAY,MAAAA,OAAO,CAACZ,EAAD,CAAP,CAAYP,KAAZ,GAAoB,KAApB;AACD,KAHD,MAGO;AACL;AACAiB,MAAAA,OAAO,CAACP,IAAR,CAAaQ,OAAO,CAACX,EAAD,CAApB;AACD;AACF,GAfD;AAlB+C;AAAA;AAAA;;AAAA;AAkC/C,0BAAoBQ,UAAU,CAACU,OAAX,EAApB,mIAA0C;AAAA,UAA/BJ,KAA+B;AACxC,UAAMd,EAAE,GAAGc,KAAK,CAACvB,GAAN,CAAU,IAAV,CAAX;;AACA,UACE,CAACoB,OAAO,CAACX,EAAD,CAAR,IACA,CAACW,OAAO,CAACX,EAAD,CAAP,CAAYc,KAAZ,CAAkBZ,MAAlB,CAAyBU,OAAO,CAACZ,EAAD,CAAP,CAAYc,KAArC,CADD,IAEAH,OAAO,CAACX,EAAD,CAAP,CAAYiB,MAAZ,KAAuBL,OAAO,CAACZ,EAAD,CAAP,CAAYiB,MAHrC,EAIE;AACA;AACAR,QAAAA,OAAO,CAACN,IAAR,CAAaS,OAAO,CAACZ,EAAD,CAApB;AACD;AACF;AA5C8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA6C/C,SAAO;AAACS,IAAAA,OAAO,EAAPA,OAAD;AAAUC,IAAAA,OAAO,EAAPA;AAAV,GAAP;AACD;;AAEc,SAASS,SAAT,CAAmB/B,SAAnB,EAA8BC,SAA9B,EAAyC;AACtD,SAAO;AACL+B,IAAAA,WAAW,EAAEjC,WAAW,CAACC,SAAD,EAAYC,SAAZ,CADnB;AAELgC,IAAAA,UAAU,EAAEf,UAAU,CAAClB,SAAD,EAAYC,SAAZ;AAFjB,GAAP;AAID","sourcesContent":["// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint-disable max-statements */\nexport function diffSources(prevStyle, nextStyle) {\n  const prevSources = prevStyle.get('sources');\n  const nextSources = nextStyle.get('sources');\n  const enter = [];\n  const update = [];\n  const exit = [];\n  const prevIds = prevSources.keySeq().toArray();\n  const nextIds = nextSources.keySeq().toArray();\n  for (const id of prevIds) {\n    const nextSource = nextSources.get(id);\n    if (nextSource) {\n      if (!nextSource.equals(prevSources.get(id))) {\n        update.push({id, source: nextSources.get(id)});\n      }\n    } else {\n      exit.push({id, source: prevSources.get(id)});\n    }\n  }\n  for (const id of nextIds) {\n    const prevSource = prevSources.get(id);\n    if (!prevSource) {\n      enter.push({id, source: nextSources.get(id)});\n    }\n  }\n  return {enter, update, exit};\n}\n/* eslint-enable max-statements */\n\nexport function diffLayers(prevStyle, nextStyle) {\n  const prevLayers = prevStyle.get('layers');\n  const nextLayers = nextStyle.get('layers');\n  const updates = [];\n  const exiting = [];\n  const prevMap = {};\n  const nextMap = {};\n  nextLayers.forEach((layer, index) => {\n    const id = layer.get('id');\n    const layerImBehind = nextLayers.get(index + 1);\n    nextMap[id] = {\n      layer,\n      id,\n      // The `id` of the layer before this one.\n      before: layerImBehind ? layerImBehind.get('id') : null,\n      enter: true\n    };\n  });\n  prevLayers.forEach((layer, index) => {\n    const id = layer.get('id');\n    const layerImBehind = prevLayers.get(index + 1);\n    prevMap[id] = {\n      layer,\n      id,\n      before: layerImBehind ? layerImBehind.get('id') : null\n    };\n    if (nextMap[id]) {\n      // Not a new layer.\n      nextMap[id].enter = false;\n    } else {\n      // This layer is being removed.\n      exiting.push(prevMap[id]);\n    }\n  });\n  for (const layer of nextLayers.reverse()) {\n    const id = layer.get('id');\n    if (\n      !prevMap[id] ||\n      !prevMap[id].layer.equals(nextMap[id].layer) ||\n      prevMap[id].before !== nextMap[id].before\n    ) {\n      // This layer is being changed.\n      updates.push(nextMap[id]);\n    }\n  }\n  return {updates, exiting};\n}\n\nexport default function diffStyle(prevStyle, nextStyle) {\n  return {\n    sourcesDiff: diffSources(prevStyle, nextStyle),\n    layersDiff: diffLayers(prevStyle, nextStyle)\n  };\n}\n"],"file":"diff-styles.js"}
{"version":3,"sources":["../../../../src/utils/transition/transition-interpolator.js"],"names":["TransitionInterpolator","currentProps","nextProps","propNames","key","startProps","endProps","start","end","t"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;IAEqBA,sB;;;;;;;;;;AAEnB;;;;;;kCAMcC,Y,EAAcC,S,EAAW;AAAA;AAAA;AAAA;;AAAA;AACrC,8BAAmB,KAAKC,SAAL,IAAkB,EAArC,+HAA0C;AAAA,cAA/BC,GAA+B;;AACxC,cAAI,CAAC,kBAAOH,YAAY,CAACG,GAAD,CAAnB,EAA0BF,SAAS,CAACE,GAAD,CAAnC,CAAL,EAAgD;AAC9C,mBAAO,KAAP;AACD;AACF;AALoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMrC,aAAO,IAAP;AACD;AAED;;;;;;;;;;oCAOgBC,U,EAAYC,Q,EAAU;AACpC,aAAO;AAACC,QAAAA,KAAK,EAAEF,UAAR;AAAoBG,QAAAA,GAAG,EAAEF;AAAzB,OAAP;AACD;AAED;;;;;;;;;;qCAOiBD,U,EAAYC,Q,EAAUG,C,EAAG;AACxC,2BAAO,KAAP,EAAc,qCAAd;AACD","sourcesContent":["import {equals} from 'math.gl';\nimport assert from '../assert';\n\nexport default class TransitionInterpolator {\n\n  /**\n   * Checks if two sets of props need transition in between\n   * @param currentProps {object} - a list of viewport props\n   * @param nextProps {object} - a list of viewport props\n   * @returns {bool} - true if two props are equivalent\n   */\n  arePropsEqual(currentProps, nextProps) {\n    for (const key of (this.propNames || [])) {\n      if (!equals(currentProps[key], nextProps[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Called before transition starts to validate/pre-process start and end props\n   * @param startProps {object} - a list of starting viewport props\n   * @param endProps {object} - a list of target viewport props\n   * @returns {Object} {start, end} - start and end props to be passed\n   *   to `interpolateProps`\n   */\n  initializeProps(startProps, endProps) {\n    return {start: startProps, end: endProps};\n  }\n\n  /**\n   * Returns viewport props in transition\n   * @param startProps {object} - a list of starting viewport props\n   * @param endProps {object} - a list of target viewport props\n   * @param t {number} - a time factor between [0, 1]\n   * @returns {object} - a list of interpolated viewport props\n   */\n  interpolateProps(startProps, endProps, t) {\n    assert(false, 'interpolateProps is not implemented');\n  }\n\n}\n"],"file":"transition-interpolator.js"}
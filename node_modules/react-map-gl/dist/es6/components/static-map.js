import{PureComponent,createElement}from"react";import PropTypes from"prop-types";import{setDiffStyle}from"../utils/style-utils";import isImmutableMap from"../utils/is-immutable-map";import WebMercatorViewport from"viewport-mercator-project";import Mapbox from"../mapbox/mapbox";import isBrowser from"../utils/is-browser";import{checkVisibilityConstraints}from"../utils/map-constraints";const mapboxgl=isBrowser?require("mapbox-gl"):null,TOKEN_DOC_URL="https://uber.github.io/react-map-gl/#/Documentation/getting-started/about-mapbox-tokens",NO_TOKEN_WARNING="A valid API access token is required to use Mapbox data";function noop(){}const UNAUTHORIZED_ERROR_CODE=401,propTypes=Object.assign({},Mapbox.propTypes,{mapStyle:PropTypes.oneOfType([PropTypes.string,PropTypes.object]),preventStyleDiffing:PropTypes.bool,disableTokenWarning:PropTypes.bool,visible:PropTypes.bool,visibilityConstraints:PropTypes.object}),defaultProps=Object.assign({},Mapbox.defaultProps,{mapStyle:"mapbox://styles/mapbox/light-v8",preventStyleDiffing:!1,visible:!0}),childContextTypes={viewport:PropTypes.instanceOf(WebMercatorViewport)};export default class StaticMap extends PureComponent{static supported(){return mapboxgl&&mapboxgl.supported()}constructor(props){super(props),this._queryParams={},StaticMap.supported()||(this.componentDidMount=noop,this.componentWillReceiveProps=noop,this.componentDidUpdate=noop,this.componentWillUnmount=noop),this.state={accessTokenInvalid:!1},this.getMap=this.getMap.bind(this),this.queryRenderedFeatures=this.queryRenderedFeatures.bind(this),this._updateMapSize=this._updateMapSize.bind(this),this._updateMapStyle=this._updateMapStyle.bind(this),this._mapboxMapLoaded=this._mapboxMapLoaded.bind(this),this._mapboxMapError=this._mapboxMapError.bind(this),this._renderNoTokenWarning=this._renderNoTokenWarning.bind(this)}getChildContext(){return{viewport:new WebMercatorViewport(this.props)}}componentDidMount(){const mapStyle=this.props.mapStyle;this._mapbox=new Mapbox(Object.assign({},this.props,{mapboxgl,container:this._mapboxMap,onError:this._mapboxMapError,mapStyle:isImmutableMap(mapStyle)?mapStyle.toJS():mapStyle})),this._map=this._mapbox.getMap()}componentWillReceiveProps(newProps){this._mapbox.setProps(newProps),this._updateMapStyle(this.props,newProps),this.setState({width:this.props.width,height:this.props.height})}componentDidUpdate(){this._updateMapSize(this.state,this.props)}componentWillUnmount(){this._mapbox.finalize(),this._mapbox=null,this._map=null}getMap(){return this._map}queryRenderedFeatures(geometry,options={}){return this._map.queryRenderedFeatures(geometry,options)}_updateMapSize(oldProps,newProps){const sizeChanged=oldProps.width!==newProps.width||oldProps.height!==newProps.height;sizeChanged&&this._map.resize()}_updateMapStyle(oldProps,newProps){const mapStyle=newProps.mapStyle,oldMapStyle=oldProps.mapStyle;mapStyle!==oldMapStyle&&(isImmutableMap(mapStyle)?this.props.preventStyleDiffing?this._map.setStyle(mapStyle.toJS()):setDiffStyle(oldMapStyle,mapStyle,this._map):this._map.setStyle(mapStyle))}_mapboxMapLoaded(ref){this._mapboxMap=ref}_mapboxMapError(evt){const statusCode=evt.error&&evt.error.status||evt.status;statusCode!==UNAUTHORIZED_ERROR_CODE||this.state.accessTokenInvalid||(console.error(NO_TOKEN_WARNING),this.setState({accessTokenInvalid:!0}))}_renderNoTokenWarning(){if(this.state.accessTokenInvalid&&!this.props.disableTokenWarning){return createElement("div",{key:"warning",id:"no-token-warning",style:{position:"absolute",left:0,top:0}},[createElement("h3",{key:"header"},NO_TOKEN_WARNING),createElement("div",{key:"text"},"For information on setting up your basemap, read"),createElement("a",{key:"link",href:TOKEN_DOC_URL},"Note on Map Tokens")])}return null}render(){const _this$props=this.props,className=_this$props.className,width=_this$props.width,height=_this$props.height,style=_this$props.style,visibilityConstraints=_this$props.visibilityConstraints,mapContainerStyle=Object.assign({},style,{width,height,position:"relative"}),visible=this.props.visible&&checkVisibilityConstraints(this.props.viewState||this.props,visibilityConstraints),mapStyle=Object.assign({},style,{width,height,visibility:visible?"visible":"hidden"});return createElement("div",{key:"map-container",style:mapContainerStyle,children:[createElement("div",{key:"map-mapbox",ref:this._mapboxMapLoaded,style:mapStyle,className}),createElement("div",{key:"map-overlays",className:"overlays",style:{position:"absolute",left:0,top:0,width,height,overflow:"hidden"},children:this.props.children}),this._renderNoTokenWarning()]})}}StaticMap.displayName="StaticMap",StaticMap.propTypes=propTypes,StaticMap.defaultProps=defaultProps,StaticMap.childContextTypes=childContextTypes;
//# sourceMappingURL=static-map.js.map
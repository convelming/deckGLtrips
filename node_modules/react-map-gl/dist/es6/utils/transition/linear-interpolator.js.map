{"version":3,"sources":["../../../../src/utils/transition/linear-interpolator.js"],"names":["WebMercatorViewport","assert","TransitionInterpolator","isValid","lerp","getEndValueByShortestPath","VIEWPORT_TRANSITION_PROPS","LinearInterpolator","constructor","opts","Array","isArray","transitionProps","propNames","around","initializeProps","startProps","endProps","startViewportProps","endViewportProps","Object","assign","aroundLngLat","unproject","key","startValue","endValue","start","end","interpolateProps","t","viewport","getMapCenterByLngLatPosition","lngLat","pos","longitude","latitude"],"mappings":"mkBAAA,MAAOA,CAAAA,mBAAP,KAAgC,2BAAhC,CAEA,MAAOC,CAAAA,MAAP,KAAmB,WAAnB,CACA,MAAOC,CAAAA,sBAAP,KAAmC,2BAAnC,CAEA,OAAQC,OAAR,CAAiBC,IAAjB,CAAuBC,yBAAvB,KAAuD,oBAAvD,CAEA,KAAMC,CAAAA,yBAAyB,CAAG,CAAC,WAAD,CAAc,UAAd,CAA0B,MAA1B,CAAkC,SAAlC,CAA6C,OAA7C,CAAlC,CAKA,cAAe,MAAMC,CAAAA,kBAAN,QAAiCL,CAAAA,sBAAuB,CAOrEM,WAAW,CAACC,IAAI,CAAG,EAAR,CAAY,CACrB,OADqB,CAGjBC,KAAK,CAACC,OAAN,CAAcF,IAAd,CAHiB,GAKnBA,IAAI,CAAG,CAACG,eAAe,CAAEH,IAAlB,CALY,EAQrB,KAAKI,SAAL,CAAiBJ,IAAI,CAACG,eAAL,EAAwBN,yBARpB,CASrB,KAAKQ,MAAL,CAAcL,IAAI,CAACK,MACpB,CAEDC,eAAe,CAACC,UAAD,CAAaC,QAAb,CAAuB,MAC9BC,CAAAA,kBAAkB,CAAG,EADS,CAE9BC,gBAAgB,CAAG,EAFW,CAIhC,KAAKL,MAJ2B,EAKlCM,MAAM,CAACC,MAAP,CAAcF,gBAAd,CAAgCF,QAAhC,CAA0C,CACxCH,MAAM,CAAE,KAAKA,MAD2B,CAExCQ,YAAY,CAAE,GAAItB,CAAAA,mBAAJ,CAAwBiB,QAAxB,EAAkCM,SAAlC,CAA4C,KAAKT,MAAjD,CAF0B,CAA1C,CALkC,CAWpC,IAAK,KAAMU,CAAAA,GAAX,GAAkB,MAAKX,SAAvB,CAAkC,MAC1BY,CAAAA,UAAU,CAAGT,UAAU,CAACQ,GAAD,CADG,CAE1BE,QAAQ,CAAGT,QAAQ,CAACO,GAAD,CAFO,CAGhCvB,MAAM,CAACE,OAAO,CAACsB,UAAD,CAAP,EAAuBtB,OAAO,CAACuB,QAAD,CAA/B,CAA4C,GAAEF,GAAI,kCAAlD,CAH0B,CAKhCN,kBAAkB,CAACM,GAAD,CAAlB,CAA0BC,UALM,CAMhCN,gBAAgB,CAACK,GAAD,CAAhB,CAAwBnB,yBAAyB,CAACmB,GAAD,CAAMC,UAAN,CAAkBC,QAAlB,CAClD,CAED,MAAO,CACLC,KAAK,CAAET,kBADF,CAELU,GAAG,CAAET,gBAFA,CAIR,CAEDU,gBAAgB,CAACb,UAAD,CAAaC,QAAb,CAAuBa,CAAvB,CAA0B,CACxC,KAAMC,CAAAA,QAAQ,CAAG,EAAjB,CACA,IAAK,KAAMP,CAAAA,GAAX,GAAkB,MAAKX,SAAvB,CACEkB,QAAQ,CAACP,GAAD,CAAR,CAAgBpB,IAAI,CAACY,UAAU,CAACQ,GAAD,CAAX,CAAkBP,QAAQ,CAACO,GAAD,CAA1B,CAAiCM,CAAjC,CAApB,CAGF,GAAIb,QAAQ,CAACH,MAAb,CAAqB,6BAEW,GAAId,CAAAA,mBAAJ,CAAwBoB,MAAM,CAACC,MAAP,CAAc,EAAd,CAAkBJ,QAAlB,CAA4Bc,QAA5B,CAAxB,EAC3BC,4BAD2B,CACE,CAC5BC,MAAM,CAAEhB,QAAQ,CAACK,YADW,CAE5BY,GAAG,CAAEjB,QAAQ,CAACH,MAFc,CADF,CAFX,gEAEZqB,SAFY,2BAEDC,QAFC,2BAOnBL,QAAQ,CAACI,SAAT,CAAqBA,SAPF,CAQnBJ,QAAQ,CAACK,QAAT,CAAoBA,QACrB,CAED,MAAOL,CAAAA,QACR,CA/DoE","sourcesContent":["import WebMercatorViewport from 'viewport-mercator-project';\n\nimport assert from '../assert';\nimport TransitionInterpolator from './transition-interpolator';\n\nimport {isValid, lerp, getEndValueByShortestPath} from './transition-utils';\n\nconst VIEWPORT_TRANSITION_PROPS = ['longitude', 'latitude', 'zoom', 'bearing', 'pitch'];\n\n/**\n * Performs linear interpolation of two viewports.\n*/\nexport default class LinearInterpolator extends TransitionInterpolator {\n\n  /**\n   * @param opts {Object}\n   *  - opts.transitionProps {Array}] - list of props to apply linear transition to.\n   *  - opts.around {Array} - a screen point to zoom/rotate around\n   */\n  constructor(opts = {}) {\n    super();\n\n    if (Array.isArray(opts)) {\n      // backward compatibility\n      opts = {transitionProps: opts};\n    }\n\n    this.propNames = opts.transitionProps || VIEWPORT_TRANSITION_PROPS;\n    this.around = opts.around;\n  }\n\n  initializeProps(startProps, endProps) {\n    const startViewportProps = {};\n    const endViewportProps = {};\n\n    if (this.around) {\n      Object.assign(endViewportProps, endProps, {\n        around: this.around,\n        aroundLngLat: new WebMercatorViewport(endProps).unproject(this.around)\n      });\n    }\n\n    for (const key of this.propNames) {\n      const startValue = startProps[key];\n      const endValue = endProps[key];\n      assert(isValid(startValue) && isValid(endValue), `${key} must be supplied for transition`);\n\n      startViewportProps[key] = startValue;\n      endViewportProps[key] = getEndValueByShortestPath(key, startValue, endValue);\n    }\n\n    return {\n      start: startViewportProps,\n      end: endViewportProps\n    };\n  }\n\n  interpolateProps(startProps, endProps, t) {\n    const viewport = {};\n    for (const key of this.propNames) {\n      viewport[key] = lerp(startProps[key], endProps[key], t);\n    }\n\n    if (endProps.around) {\n      // zoom around provided point\n      const [longitude, latitude] = new WebMercatorViewport(Object.assign({}, endProps, viewport))\n        .getMapCenterByLngLatPosition({\n          lngLat: endProps.aroundLngLat,\n          pos: endProps.around\n        });\n      viewport.longitude = longitude;\n      viewport.latitude = latitude;\n    }\n\n    return viewport;\n  }\n\n}\n"],"file":"linear-interpolator.js"}
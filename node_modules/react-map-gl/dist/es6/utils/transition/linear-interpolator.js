function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit(arr,i){var _arr=[],_n=!0,_d=!1,_e=void 0;try{for(var _s,_i=arr[Symbol.iterator]();!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!(i&&_arr.length===i));_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i["return"]||_i["return"]()}finally{if(_d)throw _e}}return _arr}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr}import WebMercatorViewport from"viewport-mercator-project";import assert from"../assert";import TransitionInterpolator from"./transition-interpolator";import{isValid,lerp,getEndValueByShortestPath}from"./transition-utils";const VIEWPORT_TRANSITION_PROPS=["longitude","latitude","zoom","bearing","pitch"];export default class LinearInterpolator extends TransitionInterpolator{constructor(opts={}){super(),Array.isArray(opts)&&(opts={transitionProps:opts}),this.propNames=opts.transitionProps||VIEWPORT_TRANSITION_PROPS,this.around=opts.around}initializeProps(startProps,endProps){const startViewportProps={},endViewportProps={};this.around&&Object.assign(endViewportProps,endProps,{around:this.around,aroundLngLat:new WebMercatorViewport(endProps).unproject(this.around)});for(const key of this.propNames){const startValue=startProps[key],endValue=endProps[key];assert(isValid(startValue)&&isValid(endValue),`${key} must be supplied for transition`),startViewportProps[key]=startValue,endViewportProps[key]=getEndValueByShortestPath(key,startValue,endValue)}return{start:startViewportProps,end:endViewportProps}}interpolateProps(startProps,endProps,t){const viewport={};for(const key of this.propNames)viewport[key]=lerp(startProps[key],endProps[key],t);if(endProps.around){const _getMapCenterByLngLat=new WebMercatorViewport(Object.assign({},endProps,viewport)).getMapCenterByLngLatPosition({lngLat:endProps.aroundLngLat,pos:endProps.around}),_getMapCenterByLngLat2=_slicedToArray(_getMapCenterByLngLat,2),longitude=_getMapCenterByLngLat2[0],latitude=_getMapCenterByLngLat2[1];viewport.longitude=longitude,viewport.latitude=latitude}return viewport}}
//# sourceMappingURL=linear-interpolator.js.map
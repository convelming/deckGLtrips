{"version":3,"sources":["../../../src/utils/map-controls.js"],"names":["MapState","LinearInterpolator","TRANSITION_EVENTS","NO_TRANSITION_PROPS","transitionDuration","LINEAR_TRANSITION_PROPS","transitionEasing","t","transitionInterpolator","transitionInterruption","BREAK","PITCH_MOUSE_THRESHOLD","PITCH_ACCEL","ZOOM_ACCEL","EVENT_TYPES","WHEEL","PAN","PINCH","DOUBLE_TAP","KEYBOARD","MapControls","constructor","_state","isDragging","events","handleEvent","bind","event","mapState","getMapState","type","_onPanStart","_onPan","_onPanEnd","_onPinchStart","_onPinch","_onPinchEnd","_onDoubleTap","_onWheel","_onKeyDown","getCenter","offsetCenter","x","y","isFunctionKeyPressed","srcEvent","metaKey","altKey","ctrlKey","shiftKey","setState","newState","Object","assign","onStateChange","updateViewport","newMapState","extraProps","extraState","oldViewport","getViewportProps","newViewport","viewStateChanged","keys","some","key","onViewStateChange","viewState","onViewportChange","getInteractiveState","overrides","mapStateProps","setOptions","options","onChangeViewport","touchZoomRotate","eventManager","scrollZoom","dragPan","dragRotate","doubleClickZoom","touchZoom","touchRotate","keyboard","height","_events","toggleEvents","isInteractive","eventNames","enabled","forEach","eventName","on","off","pos","panStart","rotateStart","rightButton","_onPanRotate","_onPanMove","panEnd","rotateEnd","pan","deltaX","deltaY","centerY","startY","width","deltaScaleY","Math","abs","min","max","rotate","deltaScaleX","preventDefault","delta","scale","exp","zoom","zoomStart","startPinchRotation","rotation","zoomEnd","isZoomOut","around","funcKey","keyCode","bearing","startPos","pitch"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport MapState from './map-state';\nimport {LinearInterpolator} from './transition';\nimport {TRANSITION_EVENTS} from './transition-manager';\n\nconst NO_TRANSITION_PROPS = {\n  transitionDuration: 0\n};\nconst LINEAR_TRANSITION_PROPS = {\n  transitionDuration: 300,\n  transitionEasing: t => t,\n  transitionInterpolator: new LinearInterpolator(),\n  transitionInterruption: TRANSITION_EVENTS.BREAK\n};\n\n// EVENT HANDLING PARAMETERS\nconst PITCH_MOUSE_THRESHOLD = 5;\nconst PITCH_ACCEL = 1.2;\nconst ZOOM_ACCEL = 0.01;\n\nconst EVENT_TYPES = {\n  WHEEL: ['wheel'],\n  PAN: ['panstart', 'panmove', 'panend'],\n  PINCH: ['pinchstart', 'pinchmove', 'pinchend'],\n  DOUBLE_TAP: ['doubletap'],\n  KEYBOARD: ['keydown']\n};\n\nexport default class MapControls {\n  /**\n   * @classdesc\n   * A class that handles events and updates mercator style viewport parameters\n   */\n  constructor() {\n    this._state = {\n      isDragging: false\n    };\n    this.events = [];\n    this.handleEvent = this.handleEvent.bind(this);\n  }\n\n  /**\n   * Callback for events\n   * @param {hammer.Event} event\n   */\n  handleEvent(event) {\n    this.mapState = this.getMapState();\n\n    switch (event.type) {\n    case 'panstart':\n      return this._onPanStart(event);\n    case 'panmove':\n      return this._onPan(event);\n    case 'panend':\n      return this._onPanEnd(event);\n    case 'pinchstart':\n      return this._onPinchStart(event);\n    case 'pinchmove':\n      return this._onPinch(event);\n    case 'pinchend':\n      return this._onPinchEnd(event);\n    case 'doubletap':\n      return this._onDoubleTap(event);\n    case 'wheel':\n      return this._onWheel(event);\n    case 'keydown':\n      return this._onKeyDown(event);\n    default:\n      return false;\n    }\n  }\n\n  /* Event utils */\n  // Event object: http://hammerjs.github.io/api/#event-object\n  getCenter(event) {\n    const {offsetCenter: {x, y}} = event;\n    return [x, y];\n  }\n\n  isFunctionKeyPressed(event) {\n    const {srcEvent} = event;\n    return Boolean(srcEvent.metaKey || srcEvent.altKey ||\n      srcEvent.ctrlKey || srcEvent.shiftKey);\n  }\n\n  setState(newState) {\n    Object.assign(this._state, newState);\n    if (this.onStateChange) {\n      this.onStateChange(this._state);\n    }\n  }\n\n  /* Callback util */\n  // formats map state and invokes callback function\n  updateViewport(newMapState, extraProps = {}, extraState = {}) {\n    const oldViewport = this.mapState ? this.mapState.getViewportProps() : {};\n    const newViewport = Object.assign({}, newMapState.getViewportProps(), extraProps);\n\n    const viewStateChanged =\n      Object.keys(newViewport).some(key => oldViewport[key] !== newViewport[key]);\n\n    // viewState has changed\n    if (viewStateChanged && this.onViewStateChange) {\n      this.onViewStateChange({viewState: newViewport});\n    }\n\n    // viewport has changed\n    if (viewStateChanged && this.onViewportChange) {\n      this.onViewportChange(newViewport);\n    }\n\n    this.setState(Object.assign({}, newMapState.getInteractiveState(), extraState));\n  }\n\n  getMapState(overrides) {\n    return new MapState(Object.assign({}, this.mapStateProps, this._state, overrides));\n  }\n\n  /**\n   * Extract interactivity options\n   */\n  setOptions(options) {\n    const {\n      // TODO(deprecate): remove this when `onChangeViewport` gets deprecated\n      onChangeViewport,\n      // TODO(deprecate): remove this when `touchZoomRotate` gets deprecated\n      touchZoomRotate = true,\n\n      onViewStateChange,\n      onViewportChange,\n      onStateChange = this.onStateChange,\n      eventManager = this.eventManager,\n      scrollZoom = true,\n      dragPan = true,\n      dragRotate = true,\n      doubleClickZoom = true,\n      touchZoom = true,\n      touchRotate = false,\n      keyboard = true\n    } = options;\n\n    this.onViewStateChange = onViewStateChange;\n    // TODO(deprecate): remove this check when `onChangeViewport` gets deprecated\n    this.onViewportChange = onViewportChange || onChangeViewport;\n    this.onStateChange = onStateChange;\n\n    if (this.mapStateProps && this.mapStateProps.height !== options.height) {\n      // Dimensions changed, normalize the props\n      this.updateViewport(new MapState(options));\n    }\n\n    this.mapStateProps = options;\n    if (this.eventManager !== eventManager) {\n      // EventManager has changed\n      this.eventManager = eventManager;\n      this._events = {};\n      this.toggleEvents(this.events, true);\n    }\n    const isInteractive = Boolean(this.onViewStateChange || this.onViewportChange);\n\n    // Register/unregister events\n    this.toggleEvents(EVENT_TYPES.WHEEL, isInteractive && scrollZoom);\n    this.toggleEvents(EVENT_TYPES.PAN, isInteractive && (dragPan || dragRotate));\n    this.toggleEvents(EVENT_TYPES.PINCH, isInteractive && touchZoomRotate);\n    this.toggleEvents(EVENT_TYPES.DOUBLE_TAP, isInteractive && doubleClickZoom);\n    this.toggleEvents(EVENT_TYPES.KEYBOARD, isInteractive && keyboard);\n\n    // Interaction toggles\n    this.scrollZoom = scrollZoom;\n    this.dragPan = dragPan;\n    this.dragRotate = dragRotate;\n    this.doubleClickZoom = doubleClickZoom;\n    this.touchZoom = touchZoomRotate && touchZoom;\n    this.touchRotate = touchZoomRotate && touchRotate;\n    this.keyboard = keyboard;\n  }\n\n  toggleEvents(eventNames, enabled) {\n    if (this.eventManager) {\n      eventNames.forEach(eventName => {\n        if (this._events[eventName] !== enabled) {\n          this._events[eventName] = enabled;\n          if (enabled) {\n            this.eventManager.on(eventName, this.handleEvent);\n          } else {\n            this.eventManager.off(eventName, this.handleEvent);\n          }\n        }\n      });\n    }\n  }\n\n  /* Event handlers */\n  // Default handler for the `panstart` event.\n  _onPanStart(event) {\n    const pos = this.getCenter(event);\n    const newMapState = this.mapState.panStart({pos}).rotateStart({pos});\n    return this.updateViewport(newMapState, NO_TRANSITION_PROPS, {isDragging: true});\n  }\n\n  // Default handler for the `panmove` event.\n  _onPan(event) {\n    return this.isFunctionKeyPressed(event) || event.rightButton ?\n      this._onPanRotate(event) : this._onPanMove(event);\n  }\n\n  // Default handler for the `panend` event.\n  _onPanEnd(event) {\n    const newMapState = this.mapState.panEnd().rotateEnd();\n    return this.updateViewport(newMapState, null, {isDragging: false});\n  }\n\n  // Default handler for panning to move.\n  // Called by `_onPan` when panning without function key pressed.\n  _onPanMove(event) {\n    if (!this.dragPan) {\n      return false;\n    }\n    const pos = this.getCenter(event);\n    const newMapState = this.mapState.pan({pos});\n    return this.updateViewport(newMapState, NO_TRANSITION_PROPS, {isDragging: true});\n  }\n\n  // Default handler for panning to rotate.\n  // Called by `_onPan` when panning with function key pressed.\n  _onPanRotate(event) {\n    if (!this.dragRotate) {\n      return false;\n    }\n\n    const {deltaX, deltaY} = event;\n    const [, centerY] = this.getCenter(event);\n    const startY = centerY - deltaY;\n    const {width, height} = this.mapState.getViewportProps();\n\n    const deltaScaleX = deltaX / width;\n    let deltaScaleY = 0;\n\n    if (deltaY > 0) {\n      if (Math.abs(height - startY) > PITCH_MOUSE_THRESHOLD) {\n        // Move from 0 to -1 as we drag upwards\n        deltaScaleY = deltaY / (startY - height) * PITCH_ACCEL;\n      }\n    } else if (deltaY < 0) {\n      if (startY > PITCH_MOUSE_THRESHOLD) {\n        // Move from 0 to 1 as we drag upwards\n        deltaScaleY = 1 - centerY / startY;\n      }\n    }\n    deltaScaleY = Math.min(1, Math.max(-1, deltaScaleY));\n\n    const newMapState = this.mapState.rotate({deltaScaleX, deltaScaleY});\n    return this.updateViewport(newMapState, NO_TRANSITION_PROPS, {isDragging: true});\n  }\n\n  // Default handler for the `wheel` event.\n  _onWheel(event) {\n    if (!this.scrollZoom) {\n      return false;\n    }\n\n    event.srcEvent.preventDefault();\n\n    const pos = this.getCenter(event);\n    const {delta} = event;\n\n    // Map wheel delta to relative scale\n    let scale = 2 / (1 + Math.exp(-Math.abs(delta * ZOOM_ACCEL)));\n    if (delta < 0 && scale !== 0) {\n      scale = 1 / scale;\n    }\n\n    const newMapState = this.mapState.zoom({pos, scale});\n    return this.updateViewport(newMapState, NO_TRANSITION_PROPS);\n  }\n\n  // Default handler for the `pinchstart` event.\n  _onPinchStart(event) {\n    const pos = this.getCenter(event);\n    const newMapState = this.mapState.zoomStart({pos}).rotateStart({pos});\n    // hack - hammer's `rotation` field doesn't seem to produce the correct angle\n    this._state.startPinchRotation = event.rotation;\n    return this.updateViewport(newMapState, NO_TRANSITION_PROPS, {isDragging: true});\n  }\n\n  // Default handler for the `pinch` event.\n  _onPinch(event) {\n    if (!this.touchZoom && !this.touchRotate) {\n      return false;\n    }\n\n    let newMapState = this.mapState;\n    if (this.touchZoom) {\n      const {scale} = event;\n      const pos = this.getCenter(event);\n      newMapState = newMapState.zoom({pos, scale});\n    }\n    if (this.touchRotate) {\n      const {rotation} = event;\n      const {startPinchRotation} = this._state;\n      newMapState = newMapState.rotate({deltaScaleX: -(rotation - startPinchRotation) / 180});\n    }\n\n    return this.updateViewport(newMapState, NO_TRANSITION_PROPS, {isDragging: true});\n  }\n\n  // Default handler for the `pinchend` event.\n  _onPinchEnd(event) {\n    const newMapState = this.mapState.zoomEnd().rotateEnd();\n    this._state.startPinchRotation = 0;\n    return this.updateViewport(newMapState, null, {isDragging: false});\n  }\n\n  // Default handler for the `doubletap` event.\n  _onDoubleTap(event) {\n    if (!this.doubleClickZoom) {\n      return false;\n    }\n    const pos = this.getCenter(event);\n    const isZoomOut = this.isFunctionKeyPressed(event);\n\n    const newMapState = this.mapState.zoom({pos, scale: isZoomOut ? 0.5 : 2});\n    return this.updateViewport(newMapState, Object.assign({}, LINEAR_TRANSITION_PROPS, {\n      transitionInterpolator: new LinearInterpolator({around: pos})\n    }));\n  }\n\n  /* eslint-disable complexity */\n  // Default handler for the `keydown` event\n  _onKeyDown(event) {\n    if (!this.keyboard) {\n      return false;\n    }\n    const funcKey = this.isFunctionKeyPressed(event);\n    const {mapStateProps} = this;\n    let newMapState;\n\n    switch (event.srcEvent.keyCode) {\n    case 189: // -\n      if (funcKey) {\n        newMapState = this.getMapState({zoom: mapStateProps.zoom - 2});\n      } else {\n        newMapState = this.getMapState({zoom: mapStateProps.zoom - 1});\n      }\n      break;\n    case 187: // +\n      if (funcKey) {\n        newMapState = this.getMapState({zoom: mapStateProps.zoom + 2});\n      } else {\n        newMapState = this.getMapState({zoom: mapStateProps.zoom + 1});\n      }\n      break;\n    case 37: // left\n      if (funcKey) {\n        newMapState = this.getMapState({bearing: mapStateProps.bearing - 15});\n      } else {\n        newMapState = this.mapState.pan({pos: [100, 0], startPos: [0, 0]});\n      }\n      break;\n    case 39: // right\n      if (funcKey) {\n        newMapState = this.getMapState({bearing: mapStateProps.bearing + 15});\n      } else {\n        newMapState = this.mapState.pan({pos: [-100, 0], startPos: [0, 0]});\n      }\n      break;\n    case 38: // up\n      if (funcKey) {\n        newMapState = this.getMapState({pitch: mapStateProps.pitch + 10});\n      } else {\n        newMapState = this.mapState.pan({pos: [0, 100], startPos: [0, 0]});\n      }\n      break;\n    case 40: // down\n      if (funcKey) {\n        newMapState = this.getMapState({pitch: mapStateProps.pitch - 10});\n      } else {\n        newMapState = this.mapState.pan({pos: [0, -100], startPos: [0, 0]});\n      }\n      break;\n    default:\n      return false;\n    }\n    return this.updateViewport(newMapState, LINEAR_TRANSITION_PROPS);\n  }\n  /* eslint-enable complexity */\n}\n"],"file":"map-controls.js"}
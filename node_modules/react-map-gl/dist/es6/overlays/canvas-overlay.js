import{createElement}from"react";import PropTypes from"prop-types";import BaseControl from"../components/base-control";import{window}from"../utils/globals";const propTypes=Object.assign({},BaseControl.propTypes,{redraw:PropTypes.func.isRequired}),defaultProps={captureScroll:!1,captureDrag:!1,captureClick:!1,captureDoubleClick:!1};export default class CanvasOverlay extends BaseControl{constructor(props){super(props),this._redraw=this._redraw.bind(this),this._canvasLoaded=this._canvasLoaded.bind(this)}componentDidMount(){this._redraw()}componentDidUpdate(){this._redraw()}_redraw(){const pixelRatio=window.devicePixelRatio||1,canvas=this._canvas,ctx=canvas.getContext("2d");ctx.save(),ctx.scale(pixelRatio,pixelRatio);const _this$context=this.context,viewport=_this$context.viewport,isDragging=_this$context.isDragging;this.props.redraw({width:viewport.width,height:viewport.height,ctx,isDragging,project:viewport.project.bind(viewport),unproject:viewport.unproject.bind(viewport)}),ctx.restore()}_canvasLoaded(ref){this._canvas=ref,this._onContainerLoad(ref)}render(){const pixelRatio=window.devicePixelRatio||1,_this$context$viewpor=this.context.viewport,width=_this$context$viewpor.width,height=_this$context$viewpor.height;return createElement("canvas",{ref:this._canvasLoaded,width:width*pixelRatio,height:height*pixelRatio,style:{width:`${width}px`,height:`${height}px`,position:"absolute",left:0,top:0}})}}CanvasOverlay.displayName="CanvasOverlay",CanvasOverlay.propTypes=propTypes,CanvasOverlay.defaultProps=defaultProps;
//# sourceMappingURL=canvas-overlay.js.map